(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{478:function(s,t,a){s.exports=a.p+"assets/img/image-20191204232521041.fd19ab13.png"},593:function(s,t,a){"use strict";a.r(t);var n=a(16),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"管线命令（pipe）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#管线命令（pipe）"}},[s._v("#")]),s._v(" 管线命令（pipe）")]),s._v(" "),n("p",[s._v("bash 命令执行的时候有输出数据，如果这群数据必须经过几道手续之后才能得到我们想要的格式，这就可以使用管线命令（pipe）来完成了")]),s._v(" "),n("p",[s._v("假设我们想知道 "),n("code",[s._v("/etc/")]),s._v(" 下有多少文件，可以使用 "),n("code",[s._v("ls /etc/")]),s._v(" 来查询，不过因为文件太多了，输出占满整个屏幕，导致最开始是什么文件看不到了，这就可以通过管线命令结合 less 指令来达成")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -al "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("less")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("如此一来， "),n("code",[s._v("ls -al")]),s._v(" 指令输出后的内容，能够被 less 读取，并且利用 less 的功能，可以前后翻动相关信息")]),s._v(" "),n("p",[s._v("管线命令"),n("strong",[s._v("仅能处理")]),s._v("由前一个指令传来的"),n("strong",[s._v("正确信息")]),s._v("（standard output），对于 standard error 没有直接处理的能力，整体管线命令可以使用下图表示")]),s._v(" "),n("p",[n("img",{attrs:{src:a(478),alt:"image-20191204232521041"}})]),s._v(" "),n("p",[s._v("在每个管线后面接的第一个数据必定是「指令」，而且这个指令必须能接受 standard input 的数据才可以，这样的指令则是「管线命令」，例如 less、more、head、tail 等都是可以接受 standard input 的管线命令。而 ls、cp、mv 等就不是管线命令了，因为他们不不会接受来自 stdin 的数据。管线命令主要有两个比较需要注意的地方：")]),s._v(" "),n("ul",[n("li",[s._v("管线命令仅会处理 standard output ，对于 standard error output 会忽略")]),s._v(" "),n("li",[s._v("管线命令必须要能接受来自前一个指令的数据成为 standard input 继续处理才行")])]),s._v(" "),n("p",[s._v("如果硬要 standard error 可以被管线命令所使用可以使用如下方式")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),n("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("&1")]),s._v("   让标准错误输出转成标准输出\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("那么下面来玩一些管线命令，以下知识点对系统管理费用有用")]),s._v(" "),n("h2",{attrs:{id:"截取命令-cut、grep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#截取命令-cut、grep"}},[s._v("#")]),s._v(" 截取命令 cut、grep")]),s._v(" "),n("p",[s._v("简单说：将一段时间经过分析后，取出我们想要的。或则是经过由分析关键词，取得我们所想要的那一行。一般来说，截取信息通常是针对一行一行来分析的。")]),s._v(" "),n("h3",{attrs:{id:"cut"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#cut"}},[s._v("#")]),s._v(" cut")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'分割字符'")]),s._v(" -f fields  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于有特定分割字符")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -c 字符区间\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于排列整齐的信息")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("选项与参数：")]),s._v(" "),n("ul",[n("li",[s._v("d：后面接分割字符。与 "),n("code",[s._v("-f")]),s._v(" 一起使用")]),s._v(" "),n("li",[s._v("f：依据 -d 的分割字符将一段信息分区成数段，用 -f 取出第几段的意思")]),s._v(" "),n("li",[s._v("c：以字符（characters）的单位取出固定字符区间")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：将 PATH 变量取出，我要找出第 5 个路径")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("}")]),s._v("\n/usr/lib64/qt-3.3/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/mrcode/.local/bin:/home/mrcode/bin\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数量是从 1 开始，不是从 0 哟")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n/usr/sbin\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取出第 5 个和第 6 个")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5,6")]),s._v("\n/usr/sbin:/home/mrcode/.local/bin\n\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2 ：将 export 输出的信息，取得第 12 字符以后的所有字符串")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -x "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTCONTROL")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignoredups"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -x "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTSIZE")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1000"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -x "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOME")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/mrcode"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("declare")]),s._v(" -x "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOSTNAME")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"study.centos.mrcode"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以上数据每个都是排列整齐的，有着 declare -x 前缀")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 那么想要把前缀去掉，就可以这样做")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -c "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("-\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTCONTROL")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignoredups"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HISTSIZE")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1000"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOME")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/mrcode"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 12-15 则是截取出这个区间的字符")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 12 则只截取 12 这个字符")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3 ：用 last 将显示的登陆者信息，仅留下用户名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 账户 \t\t终端机\t\t\t\t\t登录 IP\t\t\t\t\t日期时间\t\t\t\t\t\t")]),s._v("\nmrcode   pts/1        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 01:25   still logged "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("   \nmrcode   pts/0        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 01:25   still logged "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("   \nmrcode   pts/1        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 00:21 - 01:12  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:51"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用空格分隔的数据，那么可以这样做")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nmrcode\nmrcode\nmrcode\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其实 账户和终端机之间的空格有好几个，并不是一个所以使用下面的命令并不能把 终端机一列也提取出来")]),s._v("\nlast "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1,2")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("p",[s._v("cut 主要的用途：将同一行里面的数据进行分解")]),s._v(" "),n("p",[s._v("常使用在分析一些数据或文字数据的时候，因为有时候会以某些字符当做分区的参数，然后将数据切割，以取得我们所需要的数据，作者常常在分析 log 文件的时候，但是 cut 在处理多空格相连的数据时，就比较麻烦，所以某些常见可能需要使用下一章节要讲解的 awk 来取代")]),s._v(" "),n("h3",{attrs:{id:"grep"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" grep")]),s._v(" "),n("p",[s._v("cut 是将一行信息中，取出某部分我们想要的数据，而 grep 则是分析一堆信息，若一行当中有匹配的数据，则将这一行数据拿出来")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-acinv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--color"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("auto"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'搜索的字符串'")]),s._v(" filename\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("选项与参数：")]),s._v(" "),n("ul",[n("li",[s._v("a：将 binary 文件以 text 文件的方式搜索数据")]),s._v(" "),n("li",[s._v("c：计算找到「搜索字符」的次数")]),s._v(" "),n("li",[s._v("i：忽略大小写")]),s._v(" "),n("li",[s._v("n：输出行号")]),s._v(" "),n("li",[s._v("v：反向选择，显示出没有搜索字符串的那一行数据")]),s._v(" "),n("li",[n("code",[s._v("--color")]),s._v("：可以将找到的关键词部分加上颜色显示")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：将 last 中，有出现 root 的那一行找出来")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("\nroot     tty3                          Sun Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":16 - crash  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":40"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    \nroot     tty4                          Fri Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":48 - "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":48  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:00"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 会发现 root 被高亮颜色了，我们时候 type 命令查看，发现被自动加上了 color 参数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" is aliased to "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'grep --color=auto'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：与 范例 1 相反，不要 root 的数据")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("\nmrcode   pts/1        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 01:25   still logged "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("   \nmrcode   pts/0        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 01:25   still logged "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("   \nmrcode   pts/1        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 00:21 - 01:12  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:51"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("   system boot  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v(".0-1062.el7. Fri Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":47 - 03:43  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("08:56"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：在 last 的输出信息中，只要有 root 就取出，并且只取第一栏")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结合 cut 命令取出第一栏")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nroot\nroot\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 4：取出 /etc/man_db.conf 内涵 MANPATH 的那几行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'MANPATH'")]),s._v(" /etc/man_db.conf\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MANDATORY_MANPATH                     manpath_element")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# MANPATH_MAP           path_element    manpath_element")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("grep 支持的语法很多，用在正规表示法里，能够处理的数据太多。但是这里先不了解正规表示法，下一章再来讲解")]),s._v(" "),n("p",[s._v("这里只需要了解下，grep 可以解析一行文字，取得关键词，若改行有存在关键词，就会整行取出来")]),s._v(" "),n("h2",{attrs:{id:"排序命令：sort、wc、uniq"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#排序命令：sort、wc、uniq"}},[s._v("#")]),s._v(" 排序命令：sort、wc、uniq")]),s._v(" "),n("h3",{attrs:{id:"sort"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[s._v("#")]),s._v(" sort")]),s._v(" "),n("p",[s._v("可以依据不同的数据形态来排序。例如数字与文字的排序不一样，另外，排序的字符与语系的编码有关，因此，如果需要排序时，建议使用 LANG=C 来让语系统一，数据排序比较好一些")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-fbMnrtuk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("file or stdin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("选项与参数：")]),s._v(" "),n("ul",[n("li",[s._v("f：忽略大小写的差异")]),s._v(" "),n("li",[s._v("b：忽略最前面的空格符")]),s._v(" "),n("li",[s._v("M：以月份的名字来排序，例如 JAN、DEC 等排序方法")]),s._v(" "),n("li",[s._v("n：使用纯数字进行排序，默认是以文字形态来排序")]),s._v(" "),n("li",[s._v("r：反向排序")]),s._v(" "),n("li",[s._v("u：uniq，相同的数据中，仅出现一行代表，也就是去重")]),s._v(" "),n("li",[s._v("t：分隔符，预设使用 「tab」来分割")]),s._v(" "),n("li",[s._v("k：以那个区间（field）来进行排序")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：个人账户都记录在 /etc/passwd 下，将账户进行排序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v("\nabrt:x:173:173::/etc/abrt:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\navahi:x:70:70:Avahi mDNS/DNS-SD Stack:/var/run/avahi-daemon:/sbin/nologin\nbin:x:1:1:bin:/bin:/sbin/nologin\nchrony:x:993:990::/var/lib/chrony:/sbin/nologin\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以看到按字符排序了")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：/etc/passwd 内容是以 : 来分割的，想使用第三栏进行排序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -t "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -k "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nroot:x:0:0:root:/root:/bin/bash\nmrcode:x:1000:1000:mrcode:/home/mrcode:/bin/bash\nqemu:x:107:107:qemu user:/:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第三栏是数字，但是这里并没有按数字大小来排序，因为默认使用文字排序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与数值大小进行排序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -t "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -k "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" -n\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：利用 last ，将输出的数据仅取账户，并排序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v("\n\nmrcode\nmrcode\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("h3",{attrs:{id:"uniq"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#uniq"}},[s._v("#")]),s._v(" uniq")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-ic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n- i：忽略大小写\n- c：进行计数\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("实践练习")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1： 使用 last 将账户列出，仅取出账户，排序后去重")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v("\n\nmrcode\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\nroot\nwtmp\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：以上题，统计每个账户登录的总次数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("uniq")]),s._v(" -c\n      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("136")]),s._v(" mrcode\n     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" root\n      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" wtmp\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一行和 wtmp 是 last 的默认字符，可以忽略")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"wc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#wc"}},[s._v("#")]),s._v(" wc")]),s._v(" "),n("p",[s._v("wc 可以计算输出的信息。比如：/etc/man_db.conf 这个文件里面有多少字？多少行？")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-lwm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n-l：仅列出行\n-w：仅列出多少字（英文单字）\n-m：多少字符\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：/etc/man_db.conf 这个文件里面有多少字")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v("  /etc/man_db.conf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v("\n\t   行     字数\t   字符数\n    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("131")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("723")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5171")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：last 可以输出登陆者，但是 last 最后两行并非账户内容，那么该如何以一行指令取得登录系统的总人次？")]),s._v("\nlast "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("a-zA-Z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wtmp'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'reboot'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'unknown'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("138")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep 正则匹配，排除了非英文字符的账户")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -v 反向选择，相当于排除了指定的账户")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最后使用 wc 统计行数")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"双向重导向：tee"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双向重导向：tee"}},[s._v("#")]),s._v(" 双向重导向：tee")]),s._v(" "),n("p",[s._v("前一节讲解到 > 会将数据流整个栓送给文件或装置，因此除非去读取该文件或装置，那么如果想要将整个暑假流的处理过程中将某段信息存下来该怎么做？就可以使用 tree")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("Standard input   ------"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" --------"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Screen\n\t\t\t\t\t\t\t\t\t\t\t\t  ↓\n\t\t\t\t\t\t\t\t\t\t\t\t "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 流程如上")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("tee 会同时将数据流分送到文件与屏幕，而输出到屏幕的其实就是 stdout，那么就可以让指令继续处理")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n- a：以累加（append）的方式，将数据加入 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" 中\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 last 内容输出到 last.list 文件中，并继续处理")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" last.list "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 ls 数据存一分到 ~/homefile 同时屏幕也输出信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l /home/ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" ~/hoefile "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h2",{attrs:{id:"字符转换命令：tr、col、join、paste、expand"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符转换命令：tr、col、join、paste、expand"}},[s._v("#")]),s._v(" 字符转换命令：tr、col、join、paste、expand")]),s._v(" "),n("p",[s._v("在 vim 程序编辑器中提到过 DOS 换行符与 Unix 不一样，并且可以使用 dos2unix 与 unix2dos 来完成转换。")]),s._v(" "),n("p",[s._v("那么思考下，是否还有其他的字符转换命令，比如：将大写改成小写、将数据中的 tab 转成空格、如何将两篇信息整合成一篇？")]),s._v(" "),n("h3",{attrs:{id:"tr：正则替换或删除字符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tr：正则替换或删除字符"}},[s._v("#")]),s._v(" tr：正则替换或删除字符")]),s._v(" "),n("p",[s._v("tr 可以用来删除一段信息中的文字，或则是进行文字信息的替换")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-ds"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" SET1 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n-d：删除信息当中的 SET1 这个字符串\n-s：替换重复的字符\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：将 last 输出的信息中，原有的小写变成大写字符")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[a-z]'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[A-Z]'")]),s._v("\nMRCODE   PTS/1        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    MON DEC  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 07:00   STILL LOGGED IN\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：将 /etc/passwd 输出的信息中，将冒号 : 删除")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v("\nrootx00root/root/bin/bash\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：将 /etc/passwd 转成 dos 换行到 ~/passwd 中，再将 ^M 符号删除")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由于我这里没有安装 unix2dos 这里无法实际演示")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /etc/passwd ~/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" unix2dos ~/passwd\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" /etc/passwd ~/passwd\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[s._v("\\r")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ~/passwd.linux\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# \\r 是 dos 的换行符")]),s._v("\nll /etc/passwd ~/passwd*\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 就会发现处理之后和源文件一样大小了")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 本例子是：将 unix 转成 dos，/n 转成了 /r/n ，然后使用 tr 命令将 /r 删除了，相当于又还原了")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#那么经过上面的分析之后，其实转换程序就是转换了换行符，那么可以利用 tr 手动来完成转换")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /etc/passwd ~/passwd\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" /etc/passwd ~/passwd\n/etc/passwd:         ASCII text\n/home/mrcode/passwd: ASCII text\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 unix 换行符 \\n 替换成 dos 换行符 \\r\\n")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[s._v("\\r")]),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" passwd.dos\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" passwd*\npasswd:     ASCII text\npasswd.dos: ASCII text, with CR line terminators\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以看到已经变了")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 再将 \\r 删掉")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\r"}},[s._v("\\r")]),s._v("'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" passwd.linux\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" passwd*\npasswd:       ASCII text\npasswd.dos:   ASCII text, with CR line terminators\npasswd.linux: ASCII text\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br")])]),n("p",[s._v("该指令也可以写在正规表示法里面，因为他也是由正规表示法的方式来取代数据的，比如上面使用 "),n("code",[s._v("[]")]),s._v(" 来设置字符，通常用来取代文件中的怪异符号。")]),s._v(" "),n("h3",{attrs:{id:"col：将-tab-转换成对等的空格"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#col：将-tab-转换成对等的空格"}},[s._v("#")]),s._v(" col：将 tab 转换成对等的空格")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("col "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-xb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n-x:将 tab 键转换成对等的空格键\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 ： 利用 cat -A 显示出所有的特殊按键，最后以 col 将 tab 转成空白")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" -A /etc/man_db.conf\nMANDATORY_MANPATH^I^I^Imanpath_element$\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ^I 的符号就是 tab")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/man_db.conf "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" col -x "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" -A "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v("\nMANDATORY_MANPATH                      /usr/src/pvm3/man$\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("虽然 col 有特殊的用途，但是很多时候可以用来简单的将 tab 取代为空格键，并且可以取代会对等宽度的空格")]),s._v(" "),n("h3",{attrs:{id:"join：合并两个文件中相同行的数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#join：合并两个文件中相同行的数据"}},[s._v("#")]),s._v(" join：合并两个文件中相同行的数据")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-ti12"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" file1 file2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("选项与参数：")]),s._v(" "),n("ul",[n("li",[s._v("t：join 默认以空格符分割数据，并且比对「第一个字段」的数据，如果两个文件相同，则将两笔数据连城一行，且第一个字段放在第一个")]),s._v(" "),n("li",[s._v("i：忽略大小写")]),s._v(" "),n("li",[s._v("1：数值 1，代表「第一个文件要用哪个字段来分析」")]),s._v(" "),n("li",[s._v("2：数值 2，代表「第二个文件要用哪个字段来分析」")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：用 root 身份，将 /etc/passwd 与 /etc/shadow 相关数据整合成一栏")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# head -n 3 /etc/passwd /etc/shadow")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/shadow "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("\nroot:"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$6")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$oTg")]),s._v("/fYGfv9/GIl6h"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$UEcmYlRZacV757rHtXlvmu5xH5TWGfqd3eDOEotB3CAc5mcW5UEoMTSg0pDICd")]),s._v("/sYGrEScsHQY9tYZY0FGkKS1::0:99999:7:::\nbin:*:17834:0:99999:7:::\ndaemon:*:17834:0:99999:7:::\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出的信息来看，最左边的的账户有相同的账户，且以 : 分割")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# join -t ':' /etc/passwd /etc/shadow | head -n 3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 看到了吗，作用就是将某个字段的数据合并成一段")]),s._v("\nroot:x:0:0:root:/root:/bin/bash:"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$6")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$oTg")]),s._v("/fYGfv9/GIl6h"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$UEcmYlRZacV757rHtXlvmu5xH5TWGfqd3eDOEotB3CAc5mcW5UEoMTSg0pDICd")]),s._v("/sYGrEScsHQY9tYZY0FGkKS1::0:99999:7:::\nbin:x:1:1:bin:/bin:/sbin/nologin:*:17834:0:99999:7:::\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin:*:17834:0:99999:7:::\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：/etc/passwd 第四个字段是 GID，/etc.group 的第三个字段是 GID ,那么如何将两个文件合并？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# head -n 3 /etc/passwd /etc/group")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/group "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("\nroot:x:0:\nbin:x:1:\ndaemon:x:2:\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面两种写法一致")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" -t "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -1 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" -2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" /etc/passwd /etc/group "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" -t "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -1 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" /etc/passwd -2 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" /etc/group "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 报错了，提示没有排序过，所以在使用时要先对内容排序，这样才能合并两行数据")]),s._v("\njoin: /etc/passwd:6: is not sorted: sync:x:5:0:sync:/sbin:/bin/sync\njoin: /etc/group:11: is not sorted: wheel:x:10:mrcode\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 看下面被整合的内容")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(":root:x:0:root:/root:/bin/bash:root:x:\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":bin:x:1:bin:/bin:/sbin/nologin:bin:x:\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(":daemon:x:2:daemon:/sbin:/sbin/nologin:daemon:x:\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br")])]),n("h3",{attrs:{id:"paste：将两行贴在一起"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#paste：将两行贴在一起"}},[s._v("#")]),s._v(" paste：将两行贴在一起")]),s._v(" "),n("p",[s._v("将两行贴在一起，且中间以 tab 隔开")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" file1 file2\n\n-d：后面可以接分割符。默认以 tab 来分割\n- ：如果 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" 部分写成 -，表示来自 standard input\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：用 root 身份，将 /etc/passwd 与 /etc/shadow 同一行贴在一起")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# paste /etc/passwd /etc/shadow | head -n 3")]),s._v("\nroot:x:0:0:root:/root:/bin/bash root:"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$6")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$oTg")]),s._v("/fYGfv9/GIl6h"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$UEcmYlRZacV757rHtXlvmu5xH5TWGfqd3eDOEotB3CAc5mcW5UEoMTSg0pDICd")]),s._v("/sYGrEScsHQY9tYZY0FGkKS1::0:99999:7:::\nbin:x:1:1:bin:/bin:/sbin/nologin        bin:*:17834:0:99999:7:::\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin daemon:*:17834:0:99999:7:::\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：先将 /etc/group 用 cat 读出，然后与范例 1 贴在一起，且仅取出前三行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# paset 文件部分可以是多个，这里最后一个文件使用了 -，也就是 cat /cat/etc/group")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /etc/group | paste /etc/passwd /etc/shadow - | head -n 3")]),s._v("\nroot:x:0:0:root:/root:/bin/bash root:"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$6")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$oTg")]),s._v("/fYGfv9/GIl6h"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$UEcmYlRZacV757rHtXlvmu5xH5TWGfqd3eDOEotB3CAc5mcW5UEoMTSg0pDICd")]),s._v("/sYGrEScsHQY9tYZY0FGkKS1::0:99999:7:::       root:x:0:\nbin:x:1:1:bin:/bin:/sbin/nologin        bin:*:17834:0:99999:7:::        bin:x:1:\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin daemon:*:17834:0:99999:7:::     daemon:x:2:\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"expand：将-tab-转成空格"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#expand：将-tab-转成空格"}},[s._v("#")]),s._v(" expand：将 tab 转成空格")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("expand")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n\n-t：后面可以接数字。一般来说，一个 tab 可以用 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" 个空格取代，这里自定义几个空格取代\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：将 /etc/man_db.conf 内行首为 MANPATH 的字样取出，仅取前三行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep '^MANPATH' /etc/man_db.conf | head -n 3")]),s._v("\nMANPATH_MAP     /bin                    /usr/share/man\nMANPATH_MAP     /usr/bin                /usr/share/man\nMANPATH_MAP     /sbin                   /usr/share/man\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 行首正则为 ^,下接讲解")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：承上，将所有的符号都列出来")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep '^MANPATH' /etc/man_db.conf | head -n 3 | cat -A")]),s._v("\nMANPATH_MAP^I/bin^I^I^I/usr/share/man$\nMANPATH_MAP^I/usr/bin^I^I/usr/share/man$\nMANPATH_MAP^I/sbin^I^I^I/usr/share/man$\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ^I 是 tab")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：承上，将 tab 转成 6 个空格")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep '^MANPATH' /etc/man_db.conf | head -n 3 | expand -t 6 | cat -A")]),s._v("\nMANPATH_MAP /bin              /usr/share/man$\nMANPATH_MAP /usr/bin          /usr/share/man$\nMANPATH_MAP /sbin             /usr/share/man$\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以看到 tab 被替换成空格了")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("p",[s._v("有一个需要特别注意：tab 最大功能就是格式排列整齐，但是换成空格之后，就不一定是排列整齐的了，也可以参考一下  unexpand 这个将空白转成 tab 的指令")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep '^MANPATH' /etc/man_db.conf | head -n 3 | expand -t 6 | unexpand -t 6 | cat -A")]),s._v("\nMANPATH_MAP /bin^I^I^I/usr/share/man$\nMANPATH_MAP /usr/bin^I^I/usr/share/man$\nMANPATH_MAP /sbin^I^I^I/usr/share/man$\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以看到，范例 3 的还可以被 unexpand 给转换回来")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"分区命令：split"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分区命令：split"}},[s._v("#")]),s._v(" 分区命令：split")]),s._v(" "),n("p",[s._v("split 可以分割文件，按文件大小或行数来分割")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-bl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" PREFIX\n\n-b：后面可接要分区的大小，可加单位，如 b、k、m 等\n-l：以行数进行分区\n\nPREFIX：表示分区文件命名前缀\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：/etc/services 有 600 多 k，若想要分成 300k 一个文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" -b 300k /etc/services servers\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll servers*\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("307200")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:53 serversaa\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("307200")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:53 serversab\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("55893")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:53 serversac\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：如何将上面三个文件合成一个文件？")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" serversa* "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" servicesback\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll serv*\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("307200")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:53 serversaa\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("307200")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:53 serversab\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("55893")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:53 serversac\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("670293")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:54 servicesback\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：使用 ls -al / 输出的信息中，每 10 行记录成一个文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里文件使用了 - ，表示使用标准输入，前面讲过的")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -al / "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v(" -l "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" - lsroot\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll lsroot*\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:57 lsrootaa\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("523")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:57 lsrootab\n-rw-rw-r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192")]),s._v(" Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 09:57 lsrootac\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wc")]),s._v(" -l lsroot*\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" lsrootaa\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" lsrootab\n   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" lsrootac\n  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v(" total\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - 一般用在，指令 stdout/stdin 时，但偏偏又没有文件，就用 - 来表示 stdout/stdin")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("h2",{attrs:{id:"参数代换：xargs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参数代换：xargs"}},[s._v("#")]),s._v(" 参数代换：xargs")]),s._v(" "),n("p",[s._v("产生某个指令的参数。xargs 可以读入 stdin 的数据，并且以空格符或换行符号作为分辨，将 stdin 的数据分割成为 arguments。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-0epn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("command")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("0：数值 0，如果输入的 stdin 含有特殊字符，例如 `、\\、空格等时，可以将他转义为一个普通字符")]),s._v(" "),n("li",[s._v("e：EOF（end of file）。后面可以接一个字符串，当 xargs 分析到这个字符串时，会停止继续工作；注意："),n("code",[s._v("-e'sync'")]),s._v(" 选项与后面的 eof 字符中间没有空格")]),s._v(" "),n("li",[s._v("p：在执行每个指令的 argument 时，都会询问使用者")]),s._v(" "),n("li",[s._v("n：后面接次数，每次 command 指令执行时，要使用几个参数")])]),s._v(" "),n("p",[s._v("当 xargs 后面没有接任何指令时，默认是以 echo 来进行输出的")]),s._v(" "),n("p",[s._v("实践练习")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：将 /etc/passwd 内第一栏取出，仅取三行，使用 id 这个指令将每个账户内容秀出来")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# id 可以查询用户的 UID/GID 等信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" root\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过之前的指令把前三行的第一栏用户名提取出来")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nroot\nbin\ndaemon\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 $(cmd) 可以预先取得参数，但可惜的时候，id 这个指令只能接收一个参数，导致报错了")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\nid: extra operand ‘bin’\nTry "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id --help'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information.\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为 ID 不是管线命令，管线前的输出都没有用，相当于只输出了 id 的内容")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mrcode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mrcode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("mrcode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",10"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wheel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("context")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# xargs 将 3 个账户处理后给 id，一样的会报错")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\nid: extra operand ‘bin’\nTry "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'id --help'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("more")]),s._v(" information.\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 -n 来指定每次指令命令使用几个参数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为前面输出是三行，在 xargs 中会被当成 3 个参数")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("daemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("daemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("daemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：同上，但是每次执行 id 时，都要询问使用者是否动作")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("head")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" -p "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" root ?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里没有输入 y 被判定为不执行了")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" bin ?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".y\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" daemon ?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：将所有的 /etc/passwd 内的账户都以 id 查询，但差到 sync 就结束指令串")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cut")]),s._v(" -d "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("':'")]),s._v(" -f "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -e"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sync'")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("root"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("daemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("daemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("daemon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("adm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("adm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("adm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("uid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("gid")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("groups")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br")])]),n("p",[s._v("xargs 是一个非常好用的指令，一般使用它的原因是，很多指令其实并不支持管线命令，因此可以通过 xargs 来提供该指令引用 standard input 。如果还不太明白，下面在来看一个例子")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 4：找出 /usr/sbin 下具有特殊权限的文件名，并使用 ls -l 列出详细属性")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 但是 ls 不是管线命令")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" /usr/bin/ -perm /7000 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以使用 $(cmd) 语法")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l "),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" /usr/bin/ -perm /7000"),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 xargs")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" /usr/bin/ -perm /7000 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" -n "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -l\n-r-xr-sr-x. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tty")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15344")]),s._v(" Jun "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2014")]),s._v(" /usr/bin/wall\n-rwsr-xr-x. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("32096")]),s._v(" Oct "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("31")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),s._v(" /usr/bin/fusermount\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"关于减号-的用途"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关于减号-的用途"}},[s._v("#")]),s._v(" 关于减号 "),n("code",[s._v("-")]),s._v(" 的用途")]),s._v(" "),n("p",[s._v("管线命令在 bash 的连续的处理程序中是相当重要的。另外，在 log file 的分析中也是很重要的一环。")]),s._v(" "),n("p",[s._v("另外，在管线命令中，常常会使用到前一个指令的 stdout 作为这次的 stdin，某些指令需要用到文件名（例如 tar）来进行处理时，该 stdin 与 stdout 可以利用减号 "),n("code",[s._v("-")]),s._v("来替代")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 /home 里的文件打包，但打包的数据不是记录到文件，而是传送到 stdout")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 经过管线后，将 tar -cvf - /home 传送给后面的 tar -xvf - ，")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里的 - 就是取用前一个指令的 stdout")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /tmp/homeback\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -cvf - /home/ "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -xvf - -C /tmp/homeback/\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);