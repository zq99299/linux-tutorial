(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{682:function(s,t,a){"use strict";a.r(t);var n=a(16),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"函数库的管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数库的管理"}},[s._v("#")]),s._v(" 函数库的管理")]),s._v(" "),a("p",[s._v("在 Linux 操作系统中，函数库是很重要的一个项目，因为很多软件之间都会互相取用彼此提供的函数库来进行特殊功能的运行，所以很函数库的利用是很重要的。")]),s._v(" "),a("p",[s._v("不过函数库又按照是否被编译到程序内部而分为动态与静态函数库，他们有什么差异呢？")]),s._v(" "),a("h2",{attrs:{id:"动态与静态函数库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态与静态函数库"}},[s._v("#")]),s._v(" 动态与静态函数库")]),s._v(" "),a("h3",{attrs:{id:"静态函数库的特色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态函数库的特色"}},[s._v("#")]),s._v(" 静态函数库的特色")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("扩展名："),a("code",[s._v(".a")])]),s._v(" "),a("p",[s._v("通常扩展名为 "),a("code",[s._v("libxxx.a")]),s._v(" 类型")])]),s._v(" "),a("li",[a("p",[s._v("编译行为：")]),s._v(" "),a("p",[s._v("在编译时会直接整合到执行程序中，所以利用静态函数库编译成的文件会比较大")])]),s._v(" "),a("li",[a("p",[s._v("独立执行的状态：")]),s._v(" "),a("p",[s._v("最大优点就是编译成功的可执行文件可以独立执行，而不需要再向外部要求读取函数库的内容")])]),s._v(" "),a("li",[a("p",[s._v("升级难易度")]),s._v(" "),a("p",[s._v("由于全部打包到执行文件中，因此若函数库升级，整个执行文件必须要重新编译")])])]),s._v(" "),a("h3",{attrs:{id:"动态函数库的特色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态函数库的特色"}},[s._v("#")]),s._v(" 动态函数库的特色")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("扩展名："),a("code",[s._v(".so")])]),s._v(" "),a("p",[s._v("通常为 "),a("code",[s._v("libxxx.so")])])]),s._v(" "),a("li",[a("p",[s._v("编译行为")]),s._v(" "),a("p",[s._v("动态函数库在编译的时候，在程序里面只有一个「指向（Pointer）」位置而已。在实际运行时才会去读取函数库来使用，因此编译后的执行文件相对小很多")])]),s._v(" "),a("li",[a("p",[s._v("独立执行的状态")]),s._v(" "),a("p",[s._v("不能被独立执行，因为所指向的函数库必须要存在才行，而且函数库「所在的目录也不能改变」，因为可执行文件里面仅有「指向」，也就是在需要使用函数库时，程序会主动去某个路径下读取，")])]),s._v(" "),a("li",[a("p",[s._v("升级难易度")]),s._v(" "),a("p",[s._v("相对来说，执行文件可能不需要重新编译，由于有指向，只需要更新某个函数库即可")])])]),s._v(" "),a("p",[s._v("目前的 Linux distribution 比较倾向于使用动态函数库，上面已经提到过了，好处多多")]),s._v(" "),a("p",[s._v("绝大多数的函数库都放在 "),a("code",[s._v("/lib64")]),s._v("、"),a("code",[s._v("/lib")]),s._v(" 目录下，此外， Linux 系统里很多的函数库其实 kernel 就提供了，那么 kernel 的函数库是放在 "),a("code",[s._v("/lib/modules")]),s._v(" 里面的。")]),s._v(" "),a("p",[s._v("注意：不同版本核心提供的函数库差异有可能差异很大，不要版本混用函数库")]),s._v(" "),a("h2",{attrs:{id:"ldconfig-与-etc-ld-so-conf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ldconfig-与-etc-ld-so-conf"}},[s._v("#")]),s._v(" ldconfig 与 "),a("code",[s._v("/etc/ld.so.conf")])]),s._v(" "),a("p",[s._v("目前我们的 Linux 大多数将函数库做成动态函数库后，在运行时有没有办法改善函数库的读取效率？将常用到的动态函数库先加载到内存中，如此一来当软件要调用动态函数库时，就不需要去硬盘中读取了，这个时候就需要用到 Idconfig 与 "),a("code",[s._v("/etc/id.so.conf")])]),s._v(" "),a("p",[s._v("如何将动态函数库加载到高速缓存中呢？")]),s._v(" "),a("ol",[a("li",[s._v("首先，必须要在 "),a("code",[s._v("/etc/ld.so.conf")]),s._v(" 里写下「想要读入高速缓存中的动态函数库所在的目录」")]),s._v(" "),a("li",[s._v("利用 Idconfig 程序将 "),a("code",[s._v("/etc/ld.so.conf")]),s._v(" 的资料读取到内存中")]),s._v(" "),a("li",[s._v("同时也将数据记录一份在 "),a("code",[s._v("/etc/ld.so.cache")]),s._v(" 文件中")])]),s._v(" "),a("p",[s._v("事实上，Idconfig 还可以用来判断动态函数库的链接信息")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ldconfig "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-f conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-C cache"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nldconfig "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n选项与参数\n\t-f conf：conf 指某个文件名，含义是使用 conf 作为 libaray 函数库的取得路径，而不以 "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("/etc/ld.so.conf"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" 作为默认值\n\t-C cache：自定义 cache 文件的路径\n\t-p：列出目前的所有函数库资料内容（在 /etc/ld.so.cache 内的资料） \n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：假设我的 Mariadb 数据库函数库在 /usr/lib64/mysql 中，如何读入 cache")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim /etc/ld.so.conf.d/mrcode.conf")]),s._v("\n/usr/lib64/mysql\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 仅增加一行数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ldconfig")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行后不会显示任何信息的")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 就发现找到了我们刚刚加载的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ldconfig -p | grep mysql")]),s._v("\n        libmysqlclient.so.18 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("libc6,x86-64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/lib64/mysql/libmysqlclient.so.18\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("这做了之后，可以加快函数库读取的效率。在某些时候，你可能会自行加入某些 Tarball 安装的动态函数库，而想要这些动态函数库的相关链接可以被读入到缓存中，这个时候就可以像面那样写到 .conf 文件中")]),s._v(" "),a("h3",{attrs:{id:"程序的动态函数库解析：ldd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序的动态函数库解析：ldd"}},[s._v("#")]),s._v(" 程序的动态函数库解析：ldd")]),s._v(" "),a("p",[s._v("可以通过 ldd 判断某个可执行的 binary 文件含有哪些动态函数库。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ldd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-vdr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n选项与参数：\n\t-v：列出所有内容信息\n\t-d：重新将资料有遗失的 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v(" 显示\n\t-r：将 ELF 有关的错误内容显示\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("实践练习")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：找出 /usr/bin/passwd 文件的函数库数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ldd /usr/bin/passwd ")]),s._v("\n\tlinux-vdso.so.1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007ffe3234e000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibuser.so.1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libuser.so.1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320cce7000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibgobject-2.0.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libgobject-2.0.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320ca96000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibglib-2.0.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libglib-2.0.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320c780000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibpopt.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libpopt.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320c576000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibpam.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libpam.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320c367000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# PAM 模块")]),s._v("\n\tlibpam_misc.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libpam_misc.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320c163000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibaudit.so.1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libaudit.so.1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320bf3a000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibselinux.so.1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libselinux.so.1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320bd13000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SELinux")]),s._v("\n\tlibpthread.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libpthread.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320baf7000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibc.so.6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libc.so.6 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320b729000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibgmodule-2.0.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libgmodule-2.0.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320b525000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibcrypt.so.1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libcrypt.so.1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320b2ee000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibpcre.so.1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libpcre.so.1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320b08c000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibffi.so.6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libffi.so.6 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320ae84000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibdl.so.2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libdl.so.2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320ac80000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibcap-ng.so.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libcap-ng.so.0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320aa7a000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t/lib64/ld-linux-x86-64.so.2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320d10d000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlibfreebl3.so "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/libfreebl3.so "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007f320a877000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 之前一直在说 passwd 有使用到 pam 模块，怎么知道的？")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上面通过 ldd 就知道了，使用了 libpam.so 函数库")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：找出 /lib64/libc.so.6 这个函数库的相关其他函数库")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ldd -v /lib64/libc.so.6 ")]),s._v("\n\t/lib64/ld-linux-x86-64.so.2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007fbe6ee0f000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tlinux-vdso.so.1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("0x00007ffe450fa000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\tVersion information:  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 -v 选项，显示其他版本信息")]),s._v("\n\t/lib64/libc.so.6:\n\t\tld-linux-x86-64.so.2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GLIBC_2.3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/ld-linux-x86-64.so.2\n\t\tld-linux-x86-64.so.2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("GLIBC_PRIVATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /lib64/ld-linux-x86-64.so.2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("p",[s._v("未来如果你常常升级安装 RPM 软件时（下一章会介绍），应该常常会发现那个「相依属性」的问题，可以先用 ldd 观察「相依函数库」之间的相关性")]),s._v(" "),a("p",[s._v("如上，检查了 "),a("code",[s._v("libc.so.6")]),s._v(" 这个函数库，结果发现他还与 "),a("code",[s._v("ld-linux-x86-64.so.2 (GLIBC_2.3)")]),s._v(" 有关，就可以了解下那个文件到底是什么软件的函数库")])])}),[],!1,null,null,null);t.default=e.exports}}]);