(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{600:function(s,t,a){"use strict";a.r(t);var n=a(16),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"文件的格式化与相关处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件的格式化与相关处理"}},[s._v("#")]),s._v(" 文件的格式化与相关处理")]),s._v(" "),a("p",[s._v("不需要通过 vim 去编辑，而是通过数据流重导向配置 printf 功能以及 awk 指令，可以对文字信息进行排版显示")]),s._v(" "),a("h2",{attrs:{id:"格式化打印：printf"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化打印：printf"}},[s._v("#")]),s._v(" 格式化打印：printf")]),s._v(" "),a("p",[s._v("比如将考试分数输出，姓名与科目及分数之间，稍微做个比较漂亮的版面，比如输出下面这样的表格")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Name\t\tChinese\t\tEnlish\t\tMath\t\tAverage\nDmTsai\t\t80\t\t\t\t60\t\t\t\t92\t\t\t77.33\nVBird\t\t\t75\t\t\t\t55\t\t\t\t80\t\t\t70.00\nKen\t\t\t\t60\t\t\t\t90\t\t\t\t70\t\t\t73.33\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上表数据主要分成 5 个字段，每个字段之间可以使用 tab 或空格进行分割。将上表存储到 printf.txt 文件中，后续会使用到这个文件进行练习。")]),s._v(" "),a("p",[s._v("由于每个字段的长度并不一样，所以要达到上表效果，就需要打印格式管理员 printf 来帮忙了")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'打印格式'")]),s._v(" 实际类容\n选项与参数：\n 关于格式方面的几个特殊样式：\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("a\t警告剩余输出\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("b\t退格键（backspace）\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("f\t清楚屏幕（form feed）\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("n \t输出新的一行\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("r\tEnter 按键，换行\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t\t水平的 tab 按键\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("v\t垂直的 tab 按键\n \t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("xNN\tNN 为两位数的数字，可以转换数字称为字符\n 关于 C 程序语言内，常见的变量格式：\n \t\t%ns\t\tn 数字，s 表示 string，也就是多少个字符\n \t\t%ni\t\tn 数字，i 表示 integer，多少整数数字\n \t\t%N.nf \tn 与 N 都是数字，f 表示 floating（浮点），如果有小数，比如共 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 个位数，小数点 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 位数，则写成 %10.2f\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("下面进行练习")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：将上面存储的 printf.txt 内容仅列出姓名与成绩，并且用 tab 分割")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件存储时，字段之间全部用 tab 隔开的，复制进去就变成下面展示这样了")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" printf.txt \nName            Chinese         Enlish          Math            Average\nDmTsai          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("92")]),s._v("                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("77.33")]),s._v("\nVBird                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("75")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("70.00")]),s._v("\nKen                             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("70")]),s._v("                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("73.33")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由于 printf 不是管线命令，需要通过 cat 先提取出来内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# %s 表示不固定长度的字符串，后面跟了一个空格，并使用横向制表符 \\t 来格式化")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(" %s "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(" %s "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(" %s "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(" %s "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v(" '")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" printf.txt"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\nName     Chinese         Enlish          Math    Average         \n DmTsai          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("92")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("77.33")]),s._v("   \n VBird   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("75")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("70.00")]),s._v("   \n Ken     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("70")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("73.33")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("可以看到上述的效果虽然好多了，但是还是没有对齐。可能是由于 Chinese 比其他的长度要长，导致对不齐，那么下面来固定长度")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：将上述第二行以后，分别以字符串、整数、小数点来显示")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep -v Name 排除包含 Name 字符的行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%10s %5i %5i %5i %8.2f "),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" printf.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v Name"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n    DmTsai    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("92")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("77.33")]),s._v(" \n     VBird    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("75")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("55")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("70.00")]),s._v(" \n       Ken    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("70")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("73.33")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由于这里是格式化数字，所以第一行无法使用这里的表达式，如果使用将得到数字 0 的展示")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 展示效果好了很多")]),s._v("\n %10s：这一个字段永远显示 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 个字符宽度，不足的用空格补位\n %8.2f：表示 00000.00\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("printf 除了可以格式化处理之外，还可以根据 ASCII 的数字与图形对应来显示数据，如下")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3： 列出 16 进制 45 代表的字符是什么")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\x45"}},[s._v("\\x45")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v("\nE\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以将数值转换为字符，如果你会写 script 的话")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以测试下，20~80 之间的数值表示的字符是什么")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("printf 使用相当广泛，包括后面提到的 awk 以及在 c 程序语言中使用的屏幕输出，都是利用 printf。")]),s._v(" "),a("p",[s._v("printf 使用场景就是格式化输出，如果你要写自己的软件，把信息漂亮的输出到屏幕的话，可是很有用的")]),s._v(" "),a("h2",{attrs:{id:"awk：好用的数据处理工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk：好用的数据处理工具"}},[s._v("#")]),s._v(" awk：好用的数据处理工具")]),s._v(" "),a("ul",[a("li",[s._v("sed：常常用于一整行的处理")]),s._v(" "),a("li",[s._v("awk：倾向于将一行分成数个字段来处理")])]),s._v(" "),a("p",[s._v("因此，awk 适合处理小型的数据处理。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'条件类型1{动作1} 条件类型2{动作2} ...'")]),s._v(" filename\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" 后可以跟文件，也可以接受前个指令的 standard output\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" 主要处理每一行的字段内的数据，他默认的分隔符为「空格键」或「tab 键」\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例：使用 last 将登录者数据取出来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取出前 5 行")]),s._v("\nmrcode   pts/1        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Wed Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":20   still logged "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("   \nmrcode   pts/0        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Wed Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":20   still logged "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v("   \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("   system boot  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v(".0-1062.el7. Wed Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":19 - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":05  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:45"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    \nmrcode   pts/1        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":51 - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":13  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:22"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    \nmrcode   pts/0        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105    Mon Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v(":51 - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(":13  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("00:22"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 若要取出账户与登录 IP ，且账户与 IP 之间以 tab 隔开，可以这样写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(' "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('" '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("}'")]),s._v("\nmrcode  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105\nmrcode  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("  boot\nmrcode  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105\nmrcode  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105\n        \nwtmp    Fri\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由于每一行数据都需要处理，所以不需要有条件类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 print 功能将数据列出来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第 3 行数据被误判了，第二个字段中包含了空格")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 那么 $1 开始的变量表示哪一个字段，要注意的是：$0 表示整行数据")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("对于上面示例，awk 的处理流程是：")]),s._v(" "),a("ol",[a("li",[s._v("读入第一行，并将第一行的内容填入 "),a("code",[s._v("$0、$1...")]),s._v(" 变量中")]),s._v(" "),a("li",[s._v("依据 条件类型 的限制，判断是否需要进行后面的 动作")]),s._v(" "),a("li",[s._v("做完所有的动作与条件类型")]),s._v(" "),a("li",[s._v("若还有后续的「行」数据，则重复上面 1~3 步骤，直到所有数据都处理完为止")])]),s._v(" "),a("p",[s._v("awk 是「以行为一次处理的单位」而「以字段为最小的处理单位」，那么 awk 中还提供了以下变量信息")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("变量名称")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("含义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("NF")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("每一行（"),a("code",[s._v("$0")]),s._v("）拥有的字段总数")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("NR")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("目前 awk 所处理的是「第几行」数据")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("FS")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("目前的分割字符，默认是空格")])])])]),s._v(" "),a("p",[s._v("继续上面 last -n 5 的例子来做说明")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 想要列出每一行的账户：就是 $1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出目前处理的行数：NR 变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该行有多少字段：NF 变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意：在 awk 的格式内使用 print 打印时，非变量部分需要用双引号引用起来，因为 awk 动作是以单引号的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ last -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(' "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(' lines:" NR "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v(" columns:\" NF}'")]),s._v("\nmrcode   lines:1         columns:10\nmrcode   lines:2         columns:10\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("reboot")]),s._v("   lines:3         columns:11\nmrcode   lines:4         columns:10\nmrcode   lines:5         columns:10\n         lines:6         columns:0\nwtmp     lines:7         columns:7\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意 NF 等变量不需要有 $ 并且需要大写")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"awk-的逻辑运算字符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#awk-的逻辑运算字符"}},[s._v("#")]),s._v(" awk 的逻辑运算字符")]),s._v(" "),a("p",[s._v("既然有「条件」，那么就有逻辑运算符号")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("运算单元")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("代表意义")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v(">")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("大于")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("<")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("小于")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v(">=")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("大于或等于")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v(">=")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("小于或等于")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("==")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("strong",[s._v("等于")])])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[s._v("!=")])]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("不等于")])])])]),s._v(" "),a("p",[s._v("范例：在 /etc/passwd 中是以冒号「:」来分割字段的，第一个字段为账户，第三字段则是 UID.")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查阅 第三栏小于 10 以下的数据，并且仅列出账户与第三栏")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# FS 是字段分隔符")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{FS=":"} '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(" < 10 {print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(' "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('" '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("}'")]),s._v("\nroot:x:0:0:root:/root:/bin/bash \nbin     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\ndaemon  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\nadm     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nlp      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("halt")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\nmail    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("第一行，没有生效是为啥呢？在 awk 中，在上述定义中，FS 仅能在第二行开始，")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 需要使用关键字 BEGIN，对应的还有 END")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN {FS=":"} '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(" < 10 {print "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(' "'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('" '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v("}'")]),s._v("\nroot    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nbin     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\ndaemon  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("使用 awk 的计算功能，比如有如下的数据 pay.txt")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Name\t\t1st\t\t2nd\t\t3th\nMrcode\t2300\t2400\t2500\nDMTsai\t2100\t2000\t2300\nMrcode2\t4300\t4200\t4100\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 计算每个人的总额，而且还要格式化输出")]),s._v("\n - 第一行是说明，不需要计算，所以需要使用条件 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 时再处理\n - 第二行才开始计算，NR "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 才处理\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pay.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR==1 {printf \"%10s %10s %10s %10s %10s"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(',"Total" }\n> NR>=2 {total = '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(' ; printf "%10s %10d %10d %10d %10.2f'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(",total}'")]),s._v("\n      Name        1st        2nd        3th      Total\n    Mrcode       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2300")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2400")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2500")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7200.00")]),s._v("\n    DMTsai       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2100")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2300")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6400.00")]),s._v("\n   Mrcode2       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4300")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4200")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4100")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12600.00")]),s._v("\n\n为了方便复制，这里粘贴上完整的一行命令：cat pay.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR==1 {printf \"%10s %10s %10s %10s %10s"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(',"Total" } NR>=2 {total = '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(' ; printf "%10s %10d %10d %10d %10.2f'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(",total}'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 现在来分解上面指令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 在 awk 中，非变量需要使用双引号引用起来")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 使用 printf 时，需要加上 \\n 才能换行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面的含义是，当是第一行的时候，执行打印个格式化，前面是格式化表达式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 后面用逗号分割，给出对应内容，这里给出了 1~4 个字段，并新增了一个 total 字段")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pay.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR==1 {printf \"%10s %10s %10s %10s %10s"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(',"total"}\'')]),s._v("\n      Name        1st        2nd        3th      total\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对于计算的讲解")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 在{} 动作中可以设置变量，进行运算；这里设置了一个 total 变量，并把 1~3 个字段相加")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 由于这里有多个指令，所以需要使用冒号 「;」 进行分割")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 使用 printf 常规打印，第 5 个字段引用了动作内设置的变量 total，记住 awk 中引用变量不需要使用 % 符号")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pay.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR>=2 {total="),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(' ; printf "%10s %10d %10d %10d %10.2f'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(",total}'")]),s._v("\n    Mrcode       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2300")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2400")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2500")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4700.00")]),s._v("\n    DMTsai       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2100")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2300")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4100.00")]),s._v("\n   Mrcode2       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4300")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4200")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4100")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8500.00")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 那么上面两条是针对各自条件进行处理的，相当于 if 语句；多个条件动作之间使用空格分割；链接起来就完成了")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("p",[s._v("利用 awk 可以帮助我们处理很多日常工作了，在 awk 的输出格式中，常常会以 printf 来辅助。另外在 {} 动作内，也支持 if(条件) 语句。那么上面的指令可以使用 if 来做，如下")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" pay.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{if(NR==1) printf \"%10s %10s %10s %10s %10s"),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(',"Total" } NR>=2 {total = '),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(" + "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(' ; printf "%10s %10d %10d %10d %10.2f'),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('",'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$2")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$3")]),s._v(","),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$4")]),s._v(",total}'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("笔者没有感觉这个 if 有多方便啊？")]),s._v(" "),a("p",[s._v("另外，awk 还可以进行循环计算，不过这个属于比较进阶的单独课程了")]),s._v(" "),a("h2",{attrs:{id:"文件比对工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件比对工具"}},[s._v("#")]),s._v(" 文件比对工具")]),s._v(" "),a("p",[s._v("通常会在同一个软件包的不同版本之间，比较配置文件与原始文件的差异的时候，就会用到文件对比。")]),s._v(" "),a("p",[s._v("很多时候所谓的对比，通常是用在 ASCII 纯文本的比对。常见的指令有 diff，还可以使用 cmp 来对比非纯文本。同时也可以使用 diff 建立分析文档，以处理补丁 patch 功能的文件")]),s._v(" "),a("h3",{attrs:{id:"diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[s._v("#")]),s._v(" diff")]),s._v(" "),a("p",[s._v("diff 用在比对两个文件之间的差异，以行为单位来比对的。一般是用在 ASCII 纯文本文件的比对上。")]),s._v(" "),a("p",[s._v("比如：将 /etc/passwd 删除第 4 行，第 6 行则替换为「no six line」，新文件放置到 /tmp/test 里，该如何做？")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建测试目录")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /tmp/testpw\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study tmp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /tmp/testpw/\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /etc/passwd passwd.old \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed -e 直接在命令行模式上修改；d 是删除，c是替换；前面 sed 中有讲到过的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里把修改后的内容存到了 passwd.new 文件中")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed 中有超过两个以上的动作时需要加 -e")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/passwd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'4d'")]),s._v(" -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'6c no six line'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" passwd.new\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-bBi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" from-file to-file\n选项与参数：\n\nfrom-file：文件名，原始对比文件\nto-file：文件名，目的比较文件\n注意：两个文件，都可以使用 - 表示，- 代表 standard input\n\n-b：忽略一行当中，仅有多个空白的差异；例如：“about me“ 与 “about         me” 视为相同\n-B：忽略空白行的差异\n-i：忽略大小写的不同\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：比对 passwd.old passwd.new 文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" passwd.old passwd.new \n4d3\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左边第 4 行被删除(d)掉了，基准是右边第 3 行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" adm:x:3:4:adm:/var/adm:/sbin/nologin\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出了左边被删除的那一行内容")]),s._v("\n6c5\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左边第 6 行，被替换（c）成右边文件的第 5 行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" sync:x:5:0:sync:/sbin:/bin/sync\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左边文件第 6 行内容")]),s._v("\n---\t\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" no six line\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 右边文件第 5 行内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意这里的，左边第 4 行被删除意思是：左边文件是完整的，右边是修改之后的，右边与左边对比，原来的第 4 行被删除了")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("如果用 diff 去对比两个完全不相干的文件，是对比不出来什么的；另外 diff 还可以对比整个目录下的差异")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例：了解一下不同的开机执行等级（runlevel）内容有啥不同？假设你已经知道执行等级 0 与 5的启动脚本分别放置到 /etc/rc0.d 及 /etc/rc5.d 则可以对比下")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" /etc/rc0.d/ /etc/rc5.d/\n只在 /etc/rc0.d/ 存在：K90network\n只在 /etc/rc5.d/ 存在：S10network\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"cmp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cmp"}},[s._v("#")]),s._v(" cmp")]),s._v(" "),a("p",[s._v("cmp 主要也是对比两个文件，主要利用字节单位去对比")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cmp")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" file1 file2\n-i：将所有的不同点的字节处都列出来。因为 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cmp")]),s._v(" 预设仅会输出第一个发现的不同点\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：用 cmp 比较 passwd.old 与 passwd.new")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cmp")]),s._v(" passwd.old passwd.new \npasswd.old passwd.new 不同：第 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("106")]),s._v(" 字节，第 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 行\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"patch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#patch"}},[s._v("#")]),s._v(" patch")]),s._v(" "),a("p",[s._v("patch 与 diff 可配合使用，diff 比较出不同，而 patch 则可以将「旧文件升级为新的文件」。")]),s._v(" "),a("ol",[a("li",[s._v("先比较新旧版本的差异")]),s._v(" "),a("li",[s._v("将差异制作成补丁文件")]),s._v(" "),a("li",[s._v("再由补丁文件更新旧文件")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：以 /tmp/testpw 内的 passwd.old 与 passwd.new 制作补丁文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" -Naur passwd.old passwd.new "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" passwd.patch\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" passwd.patch \n--- passwd.old\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-01-17 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(":58:55.405462402 +0800\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新旧文件的信息")]),s._v("\n+++ passwd.new\t"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-01-17 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":01:03.115462402 +0800\n@@ -1,9 +1,8 @@\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新旧文件要修改数据的界定范围，旧文件在 1-0 行，新文件在 1-8 行")]),s._v("\n root:x:0:0:root:/root:/bin/bash\n bin:x:1:1:bin:/bin:/sbin/nologin\n daemon:x:2:2:daemon:/sbin:/sbin/nologin\n-adm:x:3:4:adm:/var/adm:/sbin/nologin\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左侧文件删除")]),s._v("\n lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\n-sync:x:5:0:sync:/sbin:/bin/sync\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 左侧文件删除")]),s._v("\n+no six line\t\t\t\t\t\t\t\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 右侧新加入")]),s._v("\n shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\n halt:x:7:0:halt:/sbin:/sbin/halt\n mail:x:8:12:mail:/var/spool/mail:/sbin/nologin\n \n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里怎么理解？ 可以理解为 old 文件是基准文件")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据这里的基准文件，看到 - 就剪掉，看到 + 就增加；执行完成后，则会得到 new 这个文件；")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 并且补丁中限制了行数。")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[s._v("将 passwd.old 同步为 passwd.new 相同的内容，")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 由于系统未预装 patch 软件，需要将之前的 iso 镜像文件挂载")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在虚拟机上找到顺序为 0 的控制器位置，选择 iso 文件，设备就能被 linux 找到了")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mount /dev/sr0 /mnt/")]),s._v("\nmount: /dev/sr0 写保护，将以只读方式挂载\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rpm -ivh /mnt/Packages/patch-2.*")]),s._v("\n警告：/mnt/Packages/patch-2.7.1-11.el7.x86_64.rpm: 头V3 RSA/SHA256 Signature, 密钥 ID f4a80eb5: NOKEY\n准备中"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# [100%]")]),s._v("\n正在升级/安装"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":patch-2.7.1-11.el7               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("################################# [100%]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# umount /mnt/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exit")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 透过上述方式安装所需软件")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("语法")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("patch -pN "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" patch_file  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新")]),s._v("\npatch -R -pN "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" patch_file  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 还原")]),s._v("\n\n选项与参数：\n-p：后面可以接 取消几层目录 的意思\n-R：代表还原，将新的文件还原成原来的旧文件\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：将刚刚制作出来的 patch file 用来更新旧版本数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ patch -p0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" passwd.patch \npatching "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" passwd.old\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll passwd.*\n-rw-rw-r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2266")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":01 passwd.new\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2266")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":50 passwd.old\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件大小和new文件一样了")]),s._v("\n-rw-rw-r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("480")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":38 passwd.patch\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：恢复旧文件内容")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ patch -R -p0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" passwd.patch \npatching "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" passwd.old\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll passwd.*\n-rw-rw-r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2266")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":01 passwd.new\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" mrcode mrcode "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2323")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("月  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(":52 passwd.old\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("这里为什么会使用 "),a("code",[s._v("-p0")]),s._v(" ？因为两个文件在同一个目录下，因此不需要减去目录。如果是整体目录比对（diff 旧目录 新目录）时，就要依据建立 patch 文件所在目录来进行目录删减")]),s._v(" "),a("p",[s._v("更详细的 patch 用法在后续的第二十章「原始码编译」")]),s._v(" "),a("h3",{attrs:{id:"文件打印准备：pr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件打印准备：pr"}},[s._v("#")]),s._v(" 文件打印准备：pr")]),s._v(" "),a("p",[s._v("在图形界面中的文字处理软件，打印时可以选择每一页的标头和页码，在文字界面下，可以使用 pr 来实现，由于 pr 参数实在太多了，这里使用最简单的方式来处理")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印 /etc/man_db.conf")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study testpw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("pr")]),s._v(" /etc/man_db.conf \n\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2018")]),s._v("-10-31 04:26                /etc/man_db.conf                 第 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" 页\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This file is used by the man-db package to configure the man and cat paths.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is also used to provide a manpath for those without one by examining")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# their PATH environment variable. For details see the manpath(5) man page.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("最上面的一行就是 pr 处理之后的效果。依次是：文件时间、文件名、页码")])])}),[],!1,null,null,null);t.default=e.exports}}]);