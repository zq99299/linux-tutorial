(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{475:function(s,t,a){s.exports=a.p+"assets/img/image-20191201181925883.3d391ba7.png"},591:function(s,t,a){"use strict";a.r(t);var n=a(16),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"bash-shell-的操作环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-shell-的操作环境"}},[s._v("#")]),s._v(" Bash Shell 的操作环境")]),s._v(" "),n("p",[s._v("在我们登陆主机的时候，屏幕上会有一些说明文字，告知我们的 Linux 版本之类的信息，还可以显示一些欢迎等信息。此外，我们习惯的环境变量、命令别名等，是否可以在登录后就主动帮我设置好？")]),s._v(" "),n("p",[s._v("这些设置又分为系统全局配置和个人账户级配置，仅是文件放置位置不同")]),s._v(" "),n("h2",{attrs:{id:"路径与指令搜寻顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#路径与指令搜寻顺序"}},[s._v("#")]),s._v(" 路径与指令搜寻顺序")]),s._v(" "),n("p",[s._v("前面讲到过使用 alias 可以建立别名，比如创建了一个 ls 的别名，其实 ls 有少的指令，那么到底是哪一个会被选中执行呢？基本上，指令运行顺序可以这样看：")]),s._v(" "),n("ol",[n("li",[s._v("以相对、绝对路径执行命令，例如 "),n("code",[s._v("/bin/ls")]),s._v(" 或 "),n("code",[s._v("./ls")])]),s._v(" "),n("li",[s._v("由 alias 找到该指令来执行")]),s._v(" "),n("li",[s._v("由 bash 内置的指令来执行")]),s._v(" "),n("li",[s._v("通过 $PATH 这个变量的顺序搜索到第一个指令执行")])]),s._v(" "),n("p",[s._v("举例来说：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("/bin/ls")]),s._v("：该指令运行后，没有颜色")]),s._v(" "),n("li",[n("code",[s._v("ls")]),s._v("：该指令运行后输出的内容有颜色，因为是使用别名 "),n("code",[s._v("alias ls=‘ls --color=auto’")])])]),s._v(" "),n("p",[s._v("也可以使用 type -a ls 来查询指令搜寻的顺序")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例：设置 echo 的命令别名为 echo -n，然后观察 echo 执行的顺序")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("echo")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'echo -n'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" -a "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" is aliased to `echo -n'\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" is a shell "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("builtin")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" is /usr/bin/echo\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("可以看到上面的顺序与本节总结的执行顺序一致")]),s._v(" "),n("h2",{attrs:{id:"bash-的进站与欢迎信息：-etc-issue、-etc-motd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-的进站与欢迎信息：-etc-issue、-etc-motd"}},[s._v("#")]),s._v(" bash 的进站与欢迎信息：/etc/issue、/etc/motd")]),s._v(" "),n("h3",{attrs:{id:"进站信息-etc-issue"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#进站信息-etc-issue"}},[s._v("#")]),s._v(" 进站信息 /etc/issue")]),s._v(" "),n("p",[s._v("在 tty1~tty6 登录时，会有几行提示字符，这个就是进站画面，该字符串在 /etc/issue 中配置的")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/issue\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("S\nKernel "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("r on an "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("m\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("如上的变量引用使用的是反斜杠，变量可以通过 man issue 中查看到 agetty ，再 man agetty 得到如下的信息，代码变量信息如下")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("\\d")]),s._v("：本地端时间的日期")]),s._v(" "),n("li",[n("code",[s._v("\\l")]),s._v("：显示第几个终端机接口")]),s._v(" "),n("li",[n("code",[s._v("\\m")]),s._v("：显示硬件的等级（i386、i486、i586...）")]),s._v(" "),n("li",[n("code",[s._v("\\n")]),s._v("：显示主机的网络名称")]),s._v(" "),n("li",[n("code",[s._v("\\O")]),s._v("：显示 domain name")]),s._v(" "),n("li",[n("code",[s._v("\\r")]),s._v("：操作系统的版本（相当于 uname -r）")]),s._v(" "),n("li",[n("code",[s._v("\\t")]),s._v("：显示本地端时间的时间")]),s._v(" "),n("li",[n("code",[s._v("\\S")]),s._v("：操作系统的名称")]),s._v(" "),n("li",[n("code",[s._v("\\v")]),s._v("：操作系统的版本")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 练习：如果想在 tty3 的进站画面看到如下显示，该如何设置才能达到效果？")]),s._v("\n\nCentOS Linux "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Core"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("terminal：tty3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nDate:2019-12-01 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":00:00\nKernel "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.10")]),s._v(".0-229.e17.x86_64 on an x86_64\nWelcome"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n使用 root 身份参考上面的变量说明修改 /etc/issue 文件达成效果\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/issue\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("S "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("terminal: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nDate: "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("d "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("t\nKernel "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("r on an "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("m\nWelcome"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[n("RouterLink",{attrs:{to:"/tutorial-basis/10/04/#gnome-的操作与注销"}},[s._v("怎么登录 tty 和切换 tty 请参考之前的章节")]),s._v("，记得，进站画面是切换到 tty 时顶部显示的信息，而不是登录后显示的信息。")],1),s._v(" "),n("p",[s._v("该文件中的规则就是使用反斜杠引用上面的变量，其他的你可以随意操作，比如写个字符画等，搞得个性一点")]),s._v(" "),n("p",[s._v("当使用 telnet 登录主机时，是不会显示 "),n("code",[s._v("/etc/issue")]),s._v(" 中的配置，而是显示 "),n("code",[s._v("/etc/issue.net")]),s._v(" 中的配置")]),s._v(" "),n("h3",{attrs:{id:"欢迎信息-etc-motd"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#欢迎信息-etc-motd"}},[s._v("#")]),s._v(" 欢迎信息 /etc/motd")]),s._v(" "),n("p",[s._v("想要使用者登录后，取得一些信息，例如使用注意事项信息，就可以修改 /etc/motd 文件")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vi /etc/motd ")]),s._v("\nHello everyone,\n这是欢迎信息中文测试\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新登录后会看到如下的信息")]),s._v("\nLast login: Sun Dec  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":37:58 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v(" from "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".0.105\nHello everyone,\n这是欢迎信息中文测试\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ \n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"bash-的环境配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-的环境配置文件"}},[s._v("#")]),s._v(" bash 的环境配置文件")]),s._v(" "),n("p",[s._v("我们一进入 bash 就取得了一堆有用的变量，这是因为系统有一些环境配置文件的存在，让 bash 在启动时直接读取这些配置文件，以规划好 bash 的操作环境。而这些配置文件分为全局系统配置和用户个人偏好配置")]),s._v(" "),n("h3",{attrs:{id:"login-与-non-login-shell"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#login-与-non-login-shell"}},[s._v("#")]),s._v(" login 与 non-login shell")]),s._v(" "),n("p",[s._v("在介绍 bash 的配置文件前，一定要先知道 login shell 与 non-login shell ，重点就在于有没有登录（login）")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("login shell：取得 bash 时需要完整的登录流程，就称为 login shell")]),s._v(" "),n("p",[s._v("举例来说，你要由 tty1~tty6 登录，需要输入用户的账户与密码，此时取得的 bash 就称为「login shell」")])]),s._v(" "),n("li",[n("p",[s._v("non-login shell：取得 bash 接口的方法不需要重复登录的举动")]),s._v(" "),n("p",[s._v("比如：你以 x window 登录 linux 后，再以 X 的图形化接口启动终端机，此时该终端机并没有再次输入账户与密码，那么该 bash 的环境就称为 non-login shell")]),s._v(" "),n("p",[s._v("再比如：你再原本的 bash 环境下再次下达 bash 这个指令，同样也没有输入账户密码，那第二个 bash（子程序）也是 non-login shell")])])]),s._v(" "),n("p",[s._v("上面两种情况取得的 bash 配置文件不一致。由于我们需要登录系统，所以先谈谈 login shell 会读取哪些配置文件？一般来说，login shell 其实只会读取这两个配置文件")]),s._v(" "),n("ol",[n("li",[s._v("/etc/profile：系统整体配置，最好不要修改这个文件")]),s._v(" "),n("li",[n("code",[s._v("~/.bash_profile")]),s._v(" 或 "),n("code",[s._v("~/.bash_login")]),s._v(" 或 "),n("code",[s._v("~/.profile")]),s._v("：属于使用者个人设置")])]),s._v(" "),n("h3",{attrs:{id:"etc-profile-（login-shell-才会读）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#etc-profile-（login-shell-才会读）"}},[s._v("#")]),s._v(" /etc/profile （login shell 才会读）")]),s._v(" "),n("p",[s._v("该文件相对于现在我们来看，可能还不太能看得懂，里面是利用使用者的标识符（UID）来决定很多重要的变量数据，这也是 "),n("strong",[s._v("每个使用者登录取得 bash 时一定会读取的配置文件")]),s._v(" ，也就是系统级全局配置，主要变量如下：")]),s._v(" "),n("ul",[n("li",[s._v("PATH：会依据 UID 决定 PATH 变量要不要含有 sbin 的系统指令目录")]),s._v(" "),n("li",[s._v("MAIL：依据账户设置好使用者的 mailbox 到 /var/spool/mail/账号名")]),s._v(" "),n("li",[s._v("USER：根据用户的账户设置该变量类容")]),s._v(" "),n("li",[s._v("HOSTANME：依据主机的 hostname 指令决定此变量内容")]),s._v(" "),n("li",[s._v("HISTSIZE：历史命令记录数量。CentOS 7.x 设置为 1000")]),s._v(" "),n("li",[s._v("umask：包括 root 默认为 022 而一般用户为 002 等")])]),s._v(" "),n("p",[s._v("/etc/profile 可不止会做这些事情，还会呼叫外部的设置数据，在 CentOS 7.x 默认情况下，下面的数据会依序被呼叫进来：")]),s._v(" "),n("h4",{attrs:{id:"etc-profile-d-sh"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#etc-profile-d-sh"}},[s._v("#")]),s._v(" /etc/profile.d/*.sh")]),s._v(" "),n("p",[s._v("通配符方式，加载该目录内所有的 sh 文件，另外，使用者需要具有 r 的权限，那么该文件就会被 /etc/profile 调用。")]),s._v(" "),n("p",[s._v("在 CentOS 7.x 中，该目录下的文件规范了 bash 操作窗口的颜色、语系、ll 与 ls 指令的命令别名、vi 的命令别名、which 的命令别名等。如果你需要帮所有使用者设置一些共享的命令别名时，可以在该目录下自行建立后缀为 .sh 的文件，并将所需要的数据加入即可")]),s._v(" "),n("h4",{attrs:{id:"etc-local-conf"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#etc-local-conf"}},[s._v("#")]),s._v(" /etc/local.conf")]),s._v(" "),n("p",[s._v("该文件是由 "),n("code",[s._v("/etc/profile.d/lang.sh")]),s._v(" 呼叫进来的，这也是我们决定 bash 预设使用何种语系的重要配置文件！文件里最重要的就是 LANG、LC_ALL 这些变量的设置，前面讨论过")]),s._v(" "),n("h4",{attrs:{id:"usr-share-bash-completion-completions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#usr-share-bash-completion-completions"}},[s._v("#")]),s._v(" /usr/share/bash-completion/completions/*")]),s._v(" "),n("p",[s._v("tab 键补全，除了命令补齐、文档名补齐外，还可以进行指令的选项、参数补齐功能。就是从这个目录里面找到对应的指令来处理的。")]),s._v(" "),n("p",[s._v("该目录下的内容是由 /etc/profile.d/bash_completion.sh 文件载入的")]),s._v(" "),n("h3",{attrs:{id:"bash-profile-（login-shell-才会读）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-profile-（login-shell-才会读）"}},[s._v("#")]),s._v(" "),n("code",[s._v("~/.bash_profile")]),s._v(" （login shell 才会读）")]),s._v(" "),n("p",[s._v("bash 在读完了整体环境设置的 /etc/profile ，并借此加载其他配置文件后，接下来则是会读取使用者的个人配置文件。在 login shell 的 bash 环境中，所读取的个人偏好配置文件其实主要有 3 个，依序分别是：")]),s._v(" "),n("ol",[n("li",[n("code",[s._v("~/.bash_profile")])]),s._v(" "),n("li",[n("code",[s._v("~/bash_login")])]),s._v(" "),n("li",[n("code",[s._v("~/,profile")])])]),s._v(" "),n("p",[s._v("其实 bash 的 login shell 设置只会读取上面三个文件中的一个，而读取的顺序则是依照上面的顺序。")]),s._v(" "),n("p",[s._v("什么意思呢？是当第一个文件不存在时，读取第二个，那么当第一个文件存在时，后面的都不读取了")]),s._v(" "),n("p",[s._v("为什么会有这么多的文件？是因为其他 shell 转换过来的使用者习惯不同，而做的兼容。")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 看看 mrcode 的 .bash_profile 的内容")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 具体路径为 /home/mrcode/.bash_profile ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.bash_profile \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .bash_profile")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get the aliases and functions")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f ~/.bashrc "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\t\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断并读取 ~/.bashrc")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" ~/.bashrc\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# User specific environment and startup programs")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下面再处理个人化设置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")])]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PATH")]),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.local/bin:"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/bin\t\n\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("该文件设置了 PATH，并使用 export 将 PATh 变成环境变量，看配置是通过累加方式将用户家目录下的 ~/bin/ 目录添加进 PATH 了，这就意味着，你可以将可执行文件放到 ~/bin/ 下，执行时，就不需要写全路径了")]),s._v(" "),n("p",[s._v("上面的文件内容中有一段 if...then... 代码，该代码后续再 shell sript 中讲解，这里判断 ~/.bashrc 文件是否存在，存在则加载。")]),s._v(" "),n("p",[s._v("bash 配置文件的读入方式是通过 source 指令来读取的。这个后续讲解，最后来看看整个 login shell 的读取流程")]),s._v(" "),n("p",[n("img",{attrs:{src:a(475),alt:"image-20191201181925883"}})]),s._v(" "),n("p",[s._v("实线的方向是主线流程，虚线的方向则是被加载的配置文件。从上图来看，CentOS 的 login shell 环境下，最终被读取的配置文件是 "),n("code",[s._v("~/.bashrc")]),s._v(" 文件，所以可以将自己的偏好设置写入该文件即可。")]),s._v(" "),n("p",[s._v("下面还要讨论 source 与 "),n("code",[s._v("~/.bashrc")])]),s._v(" "),n("h3",{attrs:{id:"source-读取环境配置文件的指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#source-读取环境配置文件的指令"}},[s._v("#")]),s._v(" source : 读取环境配置文件的指令")]),s._v(" "),n("p",[s._v("由于 "),n("code",[s._v("/etc/profile")]),s._v(" 与 "),n("code",[s._v("~/.bash_profile")]),s._v(" 都是在取得 login shell 的时候才会读取的配置文件，所以将自己的偏好设置写入上述文件后，通常都是需要注销后再登录，才会生效。可以使用 source 指令达到立即生效")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" 配置文件名\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例：将 家目录的 ~/.bashrc 的设置读入目前的 bash 环境中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.bashrc \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" ~/.bashrc \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 source 或则 小数点的语法 都能将内容读取到当前的 shell 环境中")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("source 还可以用于不同环境配置文件的场景中，比如，我的工作环境分为 3 个，那么需要分别编写属于 3 个项目的环境变量配置文件，当需要该环境时，直接使用 source 加载进来")]),s._v(" "),n("h3",{attrs:{id:"bashrc-（non-login-shell-会读）"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bashrc-（non-login-shell-会读）"}},[s._v("#")]),s._v(" "),n("code",[s._v("~/.bashrc")]),s._v(" （non-login shell 会读）")]),s._v(" "),n("p",[s._v("在非登录情况下取得 bash 环境配置文件时，仅会读取 "),n("code",[s._v("~/.bashrc")]),s._v(" 文件")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" ~/.bashrc \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .bashrc")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Source global definitions")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/bashrc "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /etc/bashrc\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Uncomment the following line if you don't like systemctl's auto-paging feature:")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export SYSTEMD_PAGER=")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# User specific aliases and functions")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("注意看，不同身份账户不同，这也解释了个人偏好配置文件是什么")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat ~/.bashrc ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# .bashrc")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# User specific aliases and functions")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用者的个人设置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("rm")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -i'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("cp")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cp -i'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("alias")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mv")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mv -i'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Source global definitions")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 整体环境的设置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /etc/bashrc "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /etc/bashrc\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("CentOS 7.x 中为什么会主动加载 /etc/bashrc 文件呢？是因为 /etc/bashrc 帮我们的 bash 定义出下面的数据：")]),s._v(" "),n("ol",[n("li",[s._v("依据不同的 UID 规范出 umask 的值")]),s._v(" "),n("li",[s._v("依据不同的 UID 规范出提示字符（就是 PS1 变量）")]),s._v(" "),n("li",[s._v("加载 /etc/profile.d/*.sh 的设置")])]),s._v(" "),n("p",[s._v("需要注意的是，/etc/bashrc 是 CentOS 特有的（Red Hat 系统），其他的 distribution 可能不是该名称。由于 "),n("code",[s._v("~/.bashrc")]),s._v("会加载 "),n("code",[s._v("/etc/bashrc")]),s._v(" 和 "),n("code",[s._v("/etc/profile.d/*.sh")]),s._v(" 所以，当你不小心删除了 "),n("code",[s._v("~/.bashrc")]),s._v(" 那么这些都不能读取了，你的 bash 提示字符可能就变成下面这个样子了")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("-bash-4.2$\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("原因是，没有加载 /etc/bashrc 来规范 PS1 d的变量，这种情况也不会影响你的 bash 使用。可以复制 /etc/skel/.bashrc 文件复制到 ~/.bashrc ，恢复回来")]),s._v(" "),n("h2",{attrs:{id:"其他相关配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其他相关配置文件"}},[s._v("#")]),s._v(" 其他相关配置文件")]),s._v(" "),n("p",[s._v("事实上还有一些配置文件可能会影响到你的 bash 操作")]),s._v(" "),n("h3",{attrs:{id:"etc-man-db-conf"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#etc-man-db-conf"}},[s._v("#")]),s._v(" /etc/man_db.conf")]),s._v(" "),n("p",[s._v("该文件对于系统管理员来说，是一个很重要的文件，它规范了使用 man 时， man page 的路径到哪里去寻找。")]),s._v(" "),n("p",[s._v("如果你是以 tarball 的方式来安装你的数据库，那么你的 man page 可能会放置在 /usr/local/softpackage/man 中，softpackage 是套件的名称，这个时候就需要手动将该路径加到 /etc/man_db.conf 中。否则 man 就会找不到相关的说明文档")]),s._v(" "),n("h3",{attrs:{id:"bash-history"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-history"}},[s._v("#")]),s._v(" "),n("code",[s._v("~/bash_history")])]),s._v(" "),n("p",[s._v("在讲解「历史命令」时提到过该文件，预设情况下，历史命令就记录在该文件中。每次登陆 bash 后，bash 会先读取这个文件，将所有的历史指令读入内存，因此，当我们登陆 bash 后就可以查知上次使用过哪些指令")]),s._v(" "),n("h3",{attrs:{id:"bash-logout"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#bash-logout"}},[s._v("#")]),s._v(" "),n("code",[s._v("~/.bash_logout")])]),s._v(" "),n("p",[s._v("该文件则记录了：当我注销 bash 后，系统再帮我做完师门动作后才离开的意思。你可以读取下该文件的内容，预设情况下，注销时，bash 只是帮我们清掉屏幕的信息而已。")]),s._v(" "),n("p",[s._v("不过，你也可以将一些备份或则是其他你认为重要的工作写在这个文件中（如：清空暂存盘）")]),s._v(" "),n("h2",{attrs:{id:"终端机的环境设置：stty、set"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#终端机的环境设置：stty、set"}},[s._v("#")]),s._v(" 终端机的环境设置：stty、set")]),s._v(" "),n("p",[s._v("前面讲解过可以在 tty1~tty6 这 6 个文字终端机（terminal）环境中登录，登录的时候可以取得一些字符设置的功能。比如")]),s._v(" "),n("ul",[n("li",[s._v("使用退格键（删除键）来删除命令行上的字符")]),s._v(" "),n("li",[s._v("ctrl + c 来强制终止一个指令的执行")]),s._v(" "),n("li",[s._v("当时呼入错误时，会有声音跑出来警告")])]),s._v(" "),n("p",[s._v("以上功能都是在登录终端机时，自动获取终端机的输入环境设置实现的")]),s._v(" "),n("p",[s._v("事实上，目前我们使用的 Linux distributions 都帮我们制作了最棒的使用者环境了，但是在某些 Unix like 机器中，还是可能需要手动修改配置")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# setting tty  ")]),s._v("\nstty "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n参数 a：将目前所有的 stty 参数列出来\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1 ：列出所有的按键与按键内容")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stty -a")]),s._v("\nspeed "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("38400")]),s._v(" baud"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" rows "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" columns "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("126")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" line "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nintr "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" quit "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" erase "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^?"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^U"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eof "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^D"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eol "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("undef"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" eol2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("undef"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" swtch "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("undef"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" start "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^Q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" stop "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nsusp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^Z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" rprnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^R"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" werase "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^W"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" lnext "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^V"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" flush "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ^O"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" min "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n-parenb -parodd -cmspar cs8 -hupcl -cstopb cread -clocal -crtscts\n-ignbrk -brkint -ignpar -parmrk -inpck -istrip -inlcr -igncr icrnl ixon -ixoff -iuclc -ixany -imaxbel -iutf8\nopost -olcuc -ocrnl onlcr -onocr -onlret -ofill -ofdel nl0 cr0 tab0 bs0 vt0 ff0\nisig icanon iexten "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" echoe echok -echonl -noflsh -xcase -tostop -echoprt echoctl echoke\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以上特殊字符 ^ 表示 Ctrl，^C 表示 ctrl + c")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("下面是几个重要的含义：")]),s._v(" "),n("ul",[n("li",[s._v("intr：送出一个 interrupt 中断信号给目前正在 run 的程序")]),s._v(" "),n("li",[s._v("quit：送出一个 quit 信号给目前正在 run 的程序")]),s._v(" "),n("li",[s._v("erase：向后删除字符")]),s._v(" "),n("li",[s._v("kill：删除在目前指令列上的所有文字")]),s._v(" "),n("li",[s._v("eof：End of file 的意思，代表「结束输入」")]),s._v(" "),n("li",[s._v("start：在某个程序停止后，重新启动它的 output")]),s._v(" "),n("li",[s._v("stop：停止目前屏幕的输出")]),s._v(" "),n("li",[s._v("susp：送出一个 terminal stop 的喜好给正在 run 的程序")])]),s._v(" "),n("p",[s._v("比如要设置 ctrl + h 来进行字符的删除")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("stty erase ^h\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认可以看到使用 ^? 但是实际测试的时候，改不回去了")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("错误操作问题：在 windows 下 ctrl + s 是保存功能，在 Linux 使用 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" 时，使用 ctrl + s 整个画面死锁，不能动了，是什么原因？\n\n通过 stty -a 可以看到 ctrl + s 是 stop 功能，停止目前屏幕的输出了，恢复输出的话就是 start，ctrl + q\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("除了 stty 之外，bash 还有自己的一些终端机设置")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-uvCHhmBx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("选项与参数：")]),s._v(" "),n("ul",[n("li",[s._v("u：预设不启用。若启用后，当使用未设置变量时，会显示错误信息")]),s._v(" "),n("li",[s._v("v：预设不启用。若启用后，在信息被输出前，会先显示信息的原始内容")]),s._v(" "),n("li",[s._v("x：预设不启用。若启用后，在指令被执行前，会显示指令内容（前面有 ++ 符号）")]),s._v(" "),n("li",[s._v("h：预设启用。与历史命令有关")]),s._v(" "),n("li",[s._v("H：预设启用。与历史命令有关")]),s._v(" "),n("li",[s._v("m：预设启用。与工作管理有关")]),s._v(" "),n("li",[s._v("B：预设启用。与括号"),n("code",[s._v("[]")]),s._v(" 的作用有关")]),s._v(" "),n("li",[s._v("C：预设不启用。若使用 > 等，则若文件存在时，该文件不会被覆盖")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1： 显示目前所有的 set 设置")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" $-\nhimBH\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：若使用未定义变量时，则显示错误信息")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -u  \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$mrcode")]),s._v("   \n-bash: mrcode: unbound variable\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" +u\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭该功能使用 + 号")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$mrcode")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：执行前，显示该指令内容")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -x\n++ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("]0;%s@%s:%s"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\007"}},[s._v("\\007")]),s._v("'")]),s._v(" mrcode study "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~'")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${"),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("HOME")]),s._v("}")]),s._v("\n+ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" /home/mrcode\n/home/mrcode\n++ "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\033"}},[s._v("\\033")]),s._v("]0;%s@%s:%s"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\007"}},[s._v("\\007")]),s._v("'")]),s._v(" mrcode study "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~'")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#要输出的指令都会被先打印到屏幕上，前面会多出 + 号")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("另外，还有其他的按键设置功能，前一小节提到的 /etc/inputrc 这个文件里面设置。还有例如 "),n("code",[s._v("/etc/DIR_COLORS* 与 /usr/share/terminfo/*")]),s._v(" 等，也都是与终端机有关的环境配置文件。但是这里不建议修改 tty 的环境，因为 bash 的环境以及设置的很亲和了。")]),s._v(" "),n("p",[s._v("bash 默认的组合键汇总如下")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("组合按键")]),s._v(" "),n("th",[s._v("功能")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("ctrl + c")]),s._v(" "),n("td",[s._v("终止目前的命令")])]),s._v(" "),n("tr",[n("td",[s._v("ctrl + D")]),s._v(" "),n("td",[s._v("输入结束（EOF），例如邮件结束的时候")])]),s._v(" "),n("tr",[n("td",[s._v("ctrl + M")]),s._v(" "),n("td",[s._v("Enter")])]),s._v(" "),n("tr",[n("td",[s._v("ctrl + S")]),s._v(" "),n("td",[s._v("暂停屏幕的输出")])]),s._v(" "),n("tr",[n("td",[s._v("ctrl + Q")]),s._v(" "),n("td",[s._v("恢复屏幕的输出")])]),s._v(" "),n("tr",[n("td",[s._v("ctrl + U")]),s._v(" "),n("td",[s._v("在提示字符下，将整列命令删除")])]),s._v(" "),n("tr",[n("td",[s._v("ctrl + Z")]),s._v(" "),n("td",[s._v("暂停 目前的命令")])])])]),s._v(" "),n("h2",{attrs:{id:"通配符与特殊符号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#通配符与特殊符号"}},[s._v("#")]),s._v(" 通配符与特殊符号")]),s._v(" "),n("p",[s._v("在 bash 操作环境中，通配符（wildcard）是非常有用的，利用 bash 处理数据就更方便了。下面是一些常用的通配符：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("符号")]),s._v(" "),n("th",[s._v("含义")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[n("code",[s._v("*")])]),s._v(" "),n("td",[s._v("代表「0 个到无穷多个」任意字符")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("?")])]),s._v(" "),n("td",[s._v("代表「一定有一个」任意字符")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("[]")])]),s._v(" "),n("td",[s._v("代表「一定由一个在括号内」的字符（非任意字符）。例如"),n("code",[s._v("[abcd]")]),s._v(" 则表示一定由一个字符，可能是 a、b、c、d 中的任意一个")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("[-]")])]),s._v(" "),n("td",[s._v("若有减号在括号中时，表示「在编码顺序内的所有字符」。例如"),n("code",[s._v("[0-9]")]),s._v("，表示 0~9 之前所有数字")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("[^]")])]),s._v(" "),n("td",[s._v("若括号中的第一个字符为指数符号 ^，表示反向旋转，例如"),n("code",[s._v("[^abc]")]),s._v("，表示不包含 a、b、c")])])])]),s._v(" "),n("p",[s._v("实践练习")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 1：找出 /etc 下一 cron 开头的文件名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll -d /etc/cron*    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d 仅显示目录")]),s._v("\ndrwxr-xr-x. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" root root  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("54")]),s._v(" Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":25 /etc/cron.d\ndrwxr-xr-x. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" root root  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("57")]),s._v(" Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":25 /etc/cron.daily\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 2：找出 etc 下刚好是 5 个字母的目录名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll -d /etc/?????\ndrwxr-x---. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" root root   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("83")]),s._v(" Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":38 /etc/audit\ndrwxr-xr-x. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" root root   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v(" Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":25 /etc/avahi\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 3：找出 etc 下目录名含有数字的目录")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll -d /etc/*"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记得通过 ** 来模糊匹配")]),s._v("\ndrwxr-xr-x. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" root root   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("78")]),s._v(" Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":22 /etc/dbus-1\n-rw-r--r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5725")]),s._v(" Aug  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("21")]),s._v(":44 /etc/DIR_COLORS.256color\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 4：找出 etc 下，目录名开头不是小写的目录")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll -d /etc/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^a-z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\nls: cannot access /etc/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^a-z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*: No such "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" or directory\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 看到没有找到不是小写的目录，换成非大写的，出来结果了")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ ll -d /etc/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^A-Z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("*\ndrwxr-xr-x. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" root root   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("101")]),s._v(" Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":23 /etc/abrt\n-rw-r--r--. "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" Oct  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(":31 /etc/adjtime\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范例 5：将范例 4 中找到的文件复制到 /tmp/upper 中")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mrcode@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /tmp/upper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -a /etc/"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("^a-z"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("* /tmp/upper\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br")])]),n("p",[s._v("除了通配符外，bash 环境中的特殊符号还有以下项，这里进行整理：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("符号")]),s._v(" "),n("th",[s._v("含义")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[n("code",[s._v("#")])]),s._v(" "),n("td",[s._v("批注、注释符号")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("\\")])]),s._v(" "),n("td",[s._v("跳脱符号、转义符号")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("|")])]),s._v(" "),n("td",[s._v("管线 pipe：分割两个管线命令的节点（后续介绍）")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v(";")])]),s._v(" "),n("td",[s._v("连续指令下达分隔符：连续性命令的节点。与管线命令不相同")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("~")])]),s._v(" "),n("td",[s._v("用户的家目录")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("$")])]),s._v(" "),n("td",[s._v("取用变量前导符")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("&")])]),s._v(" "),n("td",[s._v("工作控制（job control）：将指令变成背景下工作")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("!")])]),s._v(" "),n("td",[s._v("逻辑运算意义上的「非」not 的意思")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("/")])]),s._v(" "),n("td",[s._v("目录符号：路径分割的符号")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v(">")]),s._v("、"),n("code",[s._v(">>")])]),s._v(" "),n("td",[s._v("数据流重导向：输出导向，分别是「覆盖」和「追加」")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("<")]),s._v("、"),n("code",[s._v("<<")])]),s._v(" "),n("td",[s._v("数据流重导想：输入导向（下个章节讲解）")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("''")])]),s._v(" "),n("td",[s._v("单引号，不具有变量替换功能，$ 变为纯文本")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v('""')])]),s._v(" "),n("td",[s._v("双引号，具有变量替换功能，$ 可保留相关功能")])]),s._v(" "),n("tr",[n("td",[s._v("``")]),s._v(" "),n("td",[s._v("两个 「`」中间为可以先执行的指令，也可以使用 "),n("code",[s._v("$()")])])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("()")])]),s._v(" "),n("td",[s._v("在中间为 子 shell 的起始与结束")])]),s._v(" "),n("tr",[n("td",[n("code",[s._v("{}")])]),s._v(" "),n("td",[s._v("在中间为命令区块的组合")])])])]),s._v(" "),n("p",[s._v("以上是 bash 环境中常见的特殊符号整理，理论上，文件名尽量不要使用上述字符")])])}),[],!1,null,null,null);t.default=e.exports}}]);