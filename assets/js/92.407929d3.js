(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{595:function(l,v,_){"use strict";_.r(v);var i=_(16),e=Object(i.a)({},(function(){var l=this,v=l.$createElement,_=l._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[_("h1",{attrs:{id:"重点回顾"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重点回顾"}},[l._v("#")]),l._v(" 重点回顾")]),l._v(" "),_("ul",[_("li",[_("p",[l._v("由于核心在内存中是受保护的区块，因此我们必须通过 shell 将我们输入的指令与 Kernel 沟通，好让 kernel 可以控制硬件来正确无误的工作")])]),l._v(" "),_("li",[_("p",[l._v("学习 shell 的原因主要有：")]),l._v(" "),_("ul",[_("li",[_("p",[l._v("文字接口的 shell 在各大 distribution 都一样")])]),l._v(" "),_("li",[_("p",[l._v("远程管理时，文字接口速度较快")])]),l._v(" "),_("li",[_("p",[l._v("shell 是管理 linux 系统非常重要的一环，因为 linux 内很多控制都是以 shell 撰写的")])])])]),l._v(" "),_("li",[_("p",[l._v("系统合法的 shell 均写在 /etc/shells 文件中")])]),l._v(" "),_("li",[_("p",[l._v("用户默认登录取得的 shell 记录于 /etc/passwd 的最后一个字段")])]),l._v(" "),_("li",[_("p",[l._v("bash 的功能主要有：")]),l._v(" "),_("ul",[_("li",[l._v("命令编修能力")]),l._v(" "),_("li",[l._v("命令与文件补全功能")]),l._v(" "),_("li",[l._v("命令别名设置功能")]),l._v(" "),_("li",[l._v("工作控制、前景背景控制")]),l._v(" "),_("li",[l._v("程序化脚本")]),l._v(" "),_("li",[l._v("通配符")]),l._v(" "),_("li")])]),l._v(" "),_("li",[_("p",[l._v("type 可以用来找到执行指令为何中类型，也可以用于与 which 相同的功能")])]),l._v(" "),_("li",[_("p",[l._v("变量就是以一组文字或符号等，来取代一些设置或是一串保留的数据")])]),l._v(" "),_("li",[_("p",[l._v("变量主要有环境变量与自定义变量，或称为全局变量与局部变量")])]),l._v(" "),_("li",[_("p",[l._v("使用 env 与 export 可以观察环境变量，其中 export 可以将自定义变量转成环境变量")])]),l._v(" "),_("li",[_("p",[l._v("set 可以观察目前 bash 环境下的所有变量")])]),l._v(" "),_("li",[_("p",[_("code",[l._v("$?")]),l._v("为变量，是前一个指令执行完毕后的回传值。在 linux 回传值为 0 表示执行成功")])]),l._v(" "),_("li",[_("p",[l._v("locale 可用于观察语系资料")])]),l._v(" "),_("li",[_("p",[l._v("可用 read 让用户由键盘输入变量的值")])]),l._v(" "),_("li",[_("p",[l._v("ulimit 可用以限制用户使用系统的资源情况")])]),l._v(" "),_("li",[_("p",[l._v("bash 的配置文件主要分为 login shell 与 non-login shell。")]),l._v(" "),_("ul",[_("li",[l._v("login shell 主要读取 /etc/profile 与 "),_("code",[l._v("~/.bash_profile")])]),l._v(" "),_("li",[l._v("non-login shell 则仅读取 "),_("code",[l._v("~/.bashrc")])])])]),l._v(" "),_("li",[_("p",[l._v("在使用 vim 时，若不小心按了 ctrl + s 则画面会被冻结。可以使用 ctrl + q 来解除冻结")])]),l._v(" "),_("li",[_("p",[l._v("通配符主要有："),_("code",[l._v("*、？、[]")]),l._v(" 等")])]),l._v(" "),_("li",[_("p",[l._v("数据流重导向通过 "),_("code",[l._v(">、2>、<")]),l._v(" 之类的符号将输出的信息转到其他文件或装置去")])]),l._v(" "),_("li",[_("p",[l._v("连续命令的下达可通过 "),_("code",[l._v(";、&&、||")]),l._v(" 等符号来处理")])]),l._v(" "),_("li",[_("p",[l._v("管线命令的重点是：")]),l._v(" "),_("ul",[_("li",[l._v("管线命令仅会处理 standard output，对于 standard error output 会忽略")]),l._v(" "),_("li",[l._v("管线命令必须要能够接受来自前一个指令的数据成为 standard input 继续处理才行")])])]),l._v(" "),_("li",[_("p",[l._v("本章介绍的管线命令主要有：cut、grep、sort、wc、uniq、tee、tr、col、join、paste、expand、split、xargs 等")])])])])}),[],!1,null,null,null);v.default=e.exports}}]);