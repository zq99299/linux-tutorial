(window.webpackJsonp=window.webpackJsonp||[]).push([[163],{679:function(s,a,n){"use strict";n.r(a);var t=n(16),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"用-make-进行宏编译"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用-make-进行宏编译"}},[s._v("#")]),s._v(" 用 make 进行宏编译")]),s._v(" "),n("h2",{attrs:{id:"为什么要用-make"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要用-make"}},[s._v("#")]),s._v(" 为什么要用 make")]),s._v(" "),n("p",[s._v("来看一个案例：执行文档里面包含了 4 个源码文件，分别是 "),n("code",[s._v("main.c")]),s._v("、 "),n("code",[s._v("haha.c")]),s._v("、 "),n("code",[s._v("sin_value.c")]),s._v("、 "),n("code",[s._v("cos_value.c")]),s._v("、")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("main.c")]),s._v("：主要目的是让用户输入角度数据与调用其他三个子程序")]),s._v(" "),n("li",[n("code",[s._v("haha.c")]),s._v("：输出一堆有的没有的信息")]),s._v(" "),n("li",[n("code",[s._v("sin_value.c")]),s._v("：计算使用者输入的角度（360）sin 数值")]),s._v(" "),n("li",[n("code",[s._v("cos_value.c")]),s._v("：计算使用者输入的角度（360）cos 数值")])]),s._v(" "),n("p",[n("code",[s._v("main.c")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#include <stdio.h>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#define pi 3.14159")]),s._v("\nchar name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nfloat angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nint main"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("void"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('Please input your name: "')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tscanf  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('Please enter the degree angle (ex> 90): "')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tscanf  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%f"')]),s._v(", "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v("angle "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\thaha"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" name "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tsin_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" angle "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tcos_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" angle "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("p",[n("code",[s._v("haha.c")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#include <stdio.h>")]),s._v("\nint haha"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("char name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('Hi, Dear %s, nice to meet you."')]),s._v(", name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[n("code",[s._v("sin_value.c")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#include <stdio.h>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#include <math.h>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#define pi 3.14159")]),s._v("\nfloat angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nvoid sin_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("void"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tfloat value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tvalue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sin "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" angle / "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("180")]),s._v(". * pi "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("The Sin is: %5.2f"),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(",value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[n("code",[s._v("cos_value.c")])]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#include <stdio.h>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#include <math.h>")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#define pi 3.14159")]),s._v("\nfloat angle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nvoid cos_value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("void"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tfloat value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\tvalue "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" cos "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" angle / "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("180")]),s._v(". * pi "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("printf")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Cos is: %5.2f'),n("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v('"')]),s._v(",value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 先进行目标文件的编译，最终会有 4 个 *.o 的文件出现")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcc -c main.c ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcc -c haha.c ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcc -c sin_value.c ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcc -c cos_value.c ")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 再执行连结称为执行文件，并加入 libm 的函数，产生 man 的执行文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# gcc -o man main.o haha.o sin_value.o cos_value.o  -lm")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 执行程序，比如输入姓名，360 度角的角度值来计算")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ./man ")]),s._v("\n\n\nPlease input your name: mrcode\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入姓名")]),s._v("\n\t\nPlease enter the degree angle "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ex"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v("\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输入角度")]),s._v("\n\n\nHi, Dear mrcode, "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("nice")]),s._v(" to meet you.\nThe Sin is:  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.50")]),s._v("\nThe Cos is:  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.87")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("可以看到编译指令就变得复杂起来了，如果要重新编译，上述流程还需要重新来一次，很麻烦")]),s._v(" "),n("p",[s._v("可以使用 make 工具简化我们的工作。先建立 makefile 的文件")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 先编辑 makefile 规则文件，内容只要做出 man 这个执行文件")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim makefile")]),s._v("\nmain: main.o haha.o sin_value.o cos_value.o\n        gcc -o main main.o haha.o sin_value.o cos_value.o -lm\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意第 2 行数据，是按 tab 产生的空格")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2.尝试使用 makefile 指定的规则进行编译行为")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先把之前产生的 .o 文件删除")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rm -f main *.o")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make          ")]),s._v("\ncc    -c -o main.o main.c\ncc    -c -o haha.o haha.c\ncc    -c -o sin_value.o sin_value.c\ncc    -c -o cos_value.o cos_value.c\ngcc -o main main.o haha.o sin_value.o cos_value.o -lm\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此时 make 会读取 makefile 的内容，并根据内容直接编译相关的文件")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 在不删除任何文件的情况下，重新执行一次编译的动作")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make")]),s._v("\nmake: `main' is up to date.\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只会执行更新 update 的动作")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("p",[s._v("上面的执行，从命令行输出来看，获取你会觉得 shell script 也可以做到，的确是这样，但是 make 提供了增量编译的机制，不需要你自己去写那么复杂的流程判断了。好处如下：")]),s._v(" "),n("ul",[n("li",[s._v("简化编译时所需要下达的指令")]),s._v(" "),n("li",[s._v("若在编译完成之后，修改了某个源码文件，则 make 仅会针对被修改了的文件进行编译，其他的 object file 不会变动")]),s._v(" "),n("li",[s._v("最后可以依照相依性来更新（update）执行文件")])]),s._v(" "),n("p",[s._v("下面针对 makefile 的语法来介绍")]),s._v(" "),n("h2",{attrs:{id:"makefile-的基本语法与变量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#makefile-的基本语法与变量"}},[s._v("#")]),s._v(" makefile 的基本语法与变量")]),s._v(" "),n("p",[s._v("makefile 的语法多而复杂，可以参考 "),n("a",{attrs:{href:"http://www.gnu.org/software/make/manual/make.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("GUN 官网文档"),n("OutboundLink")],1),s._v("，这里仅做一些基本的规则，重点在于你接触源码的时候，不至于恐慌，基本规则如下")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("目标（target）：目标文件1 目标文件2\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tab"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\t gcc -o 欲建立的执行文件 目标文件1 目标文件2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("在 makefile 中的规则基本上是：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("#")]),s._v(" 代表批注")]),s._v(" "),n("li",[n("code",[s._v("<tab>")]),s._v(" 需要在命令行的第一个字符")]),s._v(" "),n("li",[s._v("目标 target 与相依文件（目标文件）之间以 "),n("code",[s._v(":")]),s._v(" 分割")])]),s._v(" "),n("p",[s._v("对上上面那个示例，如果有两个以上的执行动作时，如何做？比如增加一个指令，直接清除所有的目标文件与执行文件")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. 编辑 makefile 来建议新的规则，此规则的目标为 clean")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim makefile ")]),s._v("\nmain: main.o haha.o sin_value.o cos_value.o\n        gcc -o main main.o haha.o sin_value.o cos_value.o -lm\nclean:\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf main.o haha.o sin_value.o cos_value.o\n        \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. 以新的目标 clean 测试执行")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make clean")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf main.o haha.o sin_value.o cos_value.o\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("如此一来，makefile 里就具有至少两个目标，可以单独执行，也可以如下一起组合执行")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make clean main")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf main.o haha.o sin_value.o cos_value.o\ncc    -c -o main.o main.c\ncc    -c -o haha.o haha.c\ncc    -c -o sin_value.o sin_value.c\ncc    -c -o cos_value.o cos_value.c\ngcc -o main main.o haha.o sin_value.o cos_value.o -lm\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("这个时候，你会发现 makefile 中的重复数据很多，可以通过变量来重构")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim makefile ")]),s._v("\nLIBS "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" -lm\nOBJS "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" main.o haha.o sin_value.o cos_value.o\nmain: "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OBJS}")]),s._v("\n        gcc -o main "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OBJS}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LIBS}")]),s._v("\nclean:\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf main "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OBJS}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一定要注意这个 tab 键的语法，不能使用空格替代的！")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("与 bash shell script 的语法有点不太相同，变量的基本语法为：")]),s._v(" "),n("ol",[n("li",[s._v("变量与变量内容以 "),n("code",[s._v("=")]),s._v(" 隔开，同时两边可以有空格")]),s._v(" "),n("li",[s._v("变量左边不可以有 "),n("code",[s._v("<tab>")])]),s._v(" "),n("li",[s._v("变量与变量内容在 "),n("code",[s._v("=")]),s._v(" 两边不能有 "),n("code",[s._v(":")])]),s._v(" "),n("li",[s._v("在习惯上，变量最好以大写字母为主")]),s._v(" "),n("li",[s._v("使用变量时，以 "),n("code",[s._v("${变量}、$(变量)")]),s._v("使用")]),s._v(" "),n("li",[s._v("在该 shell 的环境变量是可以被套用的，例如提到的 CFLAGS 这个变量")]),s._v(" "),n("li",[s._v("在指令列模式也可以给予变量")])]),s._v(" "),n("p",[s._v("由于 gcc 在编译的行为时，会主动读取 CFLAGS 这个环境变量，所以可以直接在 shell 定义出这个环境变量")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CFLAGS")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Wall"')]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("make")]),s._v(" clean main\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 make 进行编译时，会读取 CFLAGS 的变量内容")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 还可以在 makefile 中定义这个变量")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("如果在指令列和 makefile 中都设置了 CFLAGS 变量，而且内容不同，那么哪一个会生效？")]),s._v(" "),n("ol",[n("li",[s._v("make 指令列后加上的环境变量为优先")]),s._v(" "),n("li",[s._v("makefile 里面指定的环境变量第 2")]),s._v(" "),n("li",[s._v("shell 原本具有的环境变量第 3")])]),s._v(" "),n("p",[s._v("此外："),n("code",[s._v("$@")]),s._v(" 这个特殊的变量，表示目前的目标（target），因此可以修改 makefile 为")]),s._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@study ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# vim makefile ")]),s._v("\nLIBS "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" -lm\nOBJS "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" main.o haha.o sin_value.o cos_value.o\nmain: "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OBJS}")]),s._v("\n        gcc -o "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OBJS}")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${LIBS}")]),s._v("\t\t\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里的 $@ 就表示是 main 这个字符")]),s._v("\nclean:\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -rf main "),n("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${OBJS}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);